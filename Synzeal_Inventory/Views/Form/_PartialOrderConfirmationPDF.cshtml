@model List<Synzeal_Inventory.Models.QuotationListModel>
@{
    Synzeal_Inventory.Entity.SynzealLiveEntities db = new Synzeal_Inventory.Entity.SynzealLiveEntities();
    int termsId = Model[0].TermsId.HasValue ? Model[0].TermsId.Value : 0;
    string terms = db.SZ_Terms.Where(x => x.Id == termsId).Select(x => x.Value).FirstOrDefault();

    List<string> reflist = new List<string>();
    string RefNumber = "";
    foreach (var item in Model)
    {
        if (!reflist.Contains(item.Ref))
        {
            reflist.Add(item.Ref);
        }
    }
    RefNumber = string.Join(", ", reflist);

    bool isShipCharge = Convert.ToBoolean(ViewBag.IsShippedCharge);
    decimal total = 0;
    string currencyType = "";

    if (Model.Select(x => x.FinalPrice).FirstOrDefault() != null)
    {
        currencyType = Model.Select(x => x.FinalPrice).FirstOrDefault().Contains("USD") ? "USD" : "";
        if (!string.IsNullOrEmpty(currencyType))
        {
            currencyType = Model.Select(x => x.FinalPrice).FirstOrDefault().Contains("INR") ? "INR" : "";
        }
        if (!string.IsNullOrEmpty(currencyType))
        {
            currencyType = Model.Select(x => x.FinalPrice).FirstOrDefault().Contains("EUR") ? "EUR" : "";
        }
    }
    //if (string.IsNullOrEmpty(currencyType))
    //{
    //    currencyType = Model.Select(x => x.SZ_QuotationData.Currency).FirstOrDefault();
    //}
}
@using Newtonsoft.Json
@functions {
    public string GetDaySuffix(int day)
    {
        switch (day)
        {
            case 1:
            case 21:
            case 31:
                return "st";
            case 2:
            case 22:
                return "nd";
            case 3:
            case 23:
                return "rd";
            default:
                return "th";
        }
    }
}

<div style="margin:5% 33%;float:left;box-shadow:0 0 3px #aaa; height:auto;color:gray;">
    <div style="width:100%; padding:0px; padding-top:10px;text-align: center">
        <span style="color:black">
            Your Order Confirmation # @Model[0].PONumber
        </span>
        @*<p style="color:red">
                Note:Due to Corona virus outbreak, our city is under total lockdown till 31st March. We will dispatch your order once other services resume their operations.
                <br />
                We will keep you update about progress.
            </p>*@
        @if (!string.IsNullOrEmpty(Model[0].ClientRef))
        {
            <br /><span style="color:blue">Customer RFQ Reference # @Model[0].ClientRef</span>
        }
    </div>
    <br /><br />
    <table width="100%">
        <tr>
            <td valign="top">
                <img src="http://www.synzeal.com/Themes/DefaultClean/Content/images/logo.png" width="200px" />
            </td>
            <td style="float:right">
                <span style="font-size:9px;float:right;padding:10px; text-align:right;color:gray">
                    <b style="color:#000">Syn</b><b style="color: #00659e;">Zeal</b><b style="color:#000"> Research Pvt Ltd</b><br />
                    Plot No. F, Shree Ganesh Industrial Estate,<br />
                    423/24/8, Mahagujarat Industrial Estate,<br />
                    Sarkhej-Bavla Road , Moraiya , India-382213<br />
                    <b>Email:-</b> standards@synzeal.com<br />
                    <b>Phone:-</b> +91-757-500-2050<br />
                </span>
            </td>
        </tr>
    </table>

    <div style="width:100%; border-bottom:1px solid rgba(0,0,0,0.2);float:left;border-top:1px solid #000;padding-bottom:5px;color:#000;">
        <table width="100%">
            <tr>
                <td style="font-size:9px;">
                    <b style="color:#000;">SynZeal Quote ID :</b> @RefNumber
                </td>
                <td>
                    <span style="font-size:9px;float:right;padding:10px; text-align:right;">
                        <b style="color:#000;">Date :</b> @Model[0].CreatedDate.Value.Day<sup>@GetDaySuffix(Model[0].CreatedDate.Value.Day)</sup> @Model[0].CreatedDate.Value.ToString("MMMM yy")
                    </span>
                </td>
            </tr>
            <tr>
                <td style="font-size:9px;">
                    <b style="color:#000;">Customer Name :</b> @Model[0].CompanyName
                </td>
                <td>
                    <span style="font-size:9px;float:right;padding:10px; text-align:right;">
                        <b style="color:#000;">PO Date :</b> @Model[0].PODate.Value.Day<sup>@GetDaySuffix(Model[0].PODate.Value.Day)</sup> @Model[0].PODate.Value.ToString("MMMM yy")
                    </span>
                </td>
            </tr>
        </table>
    </div>
    <hrline />
    @if (Model[0].IsImageAttach)
    {
        <div style="width:100%; padding:0px; float:left;padding-top:10px;">

            <table>
                <thead>
                    <tr style="font-size:10px">
                        <th width="7%">
                            <b>Sr. No.</b>
                        </th>
                        <th>
                            <b style="text-align:center;">Structure</b>
                        </th>
                        <th width="57%"><b>Quotation Details</b></th>
                    </tr>
                </thead>
                <tbody>
                    <tr> <td colspan="3"> <hrline /></td></tr>
                    @{
                        int srno = 1;
                        foreach (var item in Model.OrderBy(x => x.DisplayOrder))
                        {
                            if (!string.IsNullOrEmpty(item.Currency))
                            {
                                item.SZ_QuotationData = new Synzeal_Inventory.Entity.SZ_Quotation();
                                item.Currency = currencyType;
                            }

                            string imagePath = string.Empty;
                            bool exists = false;
                            if (!string.IsNullOrEmpty(item.CATNo))
                            {
                                string uri = "https://synzeal.com/api/RestAPI/ProductDetailsBySku?sku=" + item.CATNo.Trim();
                                HttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(uri);
                                request.Method = "GET";
                                request.ContentType = "application/json";

                                try
                                {
                                    WebResponse response = request.GetResponse();
                                    using (var reader = new StreamReader(response.GetResponseStream()))
                                    {
                                        var ApiStatus = reader.ReadToEnd();
                                        string productModel = JsonConvert.DeserializeObject<string>(ApiStatus);
                                        var product = JsonConvert.DeserializeObject<Synzeal_Inventory.Models.ProductDetailsModel>(productModel);
                                        if (product != null && product.DefaultPictureModel != null)
                                        {
                                            imagePath = product.DefaultPictureModel.FullSizeImageUrl;
                                        }
                                        else
                                        {
                                            imagePath = string.Empty;
                                        }
                                    }
                                    exists = true;
                                }
                                catch
                                {
                                    exists = false;
                                }
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(item.ImagePath) && item.ImagePath.Contains("../"))
                                {
                                    string host = Request.Url.AbsoluteUri.ToString().Substring(0, Request.Url.AbsoluteUri.ToLower().IndexOf("/form"));
                                    imagePath = item.ImagePath.Replace("..", host);
                                }
                                else
                                {
                                    imagePath = item.ImagePath;
                                }

                                if (!string.IsNullOrEmpty(imagePath))
                                {
                                    HttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(imagePath);
                                    request.Method = "HEAD";
                                    try
                                    {
                                        request.GetResponse();
                                        exists = true;
                                    }
                                    catch
                                    {
                                        exists = false;
                                    }
                                }
                            }
                            int totalprice = 0;
                            string strprice = "";
                            <tr style="color:#000;">
                                <td style="font-size:9px;text-align:center;" width="7%">
                                    @srno
                                </td>
                                <td style="font-size:9px;text-align:center;">
                                    @if (!string.IsNullOrEmpty(imagePath) && exists)
                                    {
                                        <img src="@imagePath" width="200px" />
                                    }
                                    else
                                    {
                                        <img src="https://www.synzeal.com/content/images/thumbs/default-image_500.png" width="200px" />
                                    }
                                </td>
                                <td style="font-size:9px;" width="57%">
                                    <table width="100%">
                                        <tr>
                                            <td>
                                                <b>Name:</b> @item.ProductName<br />
                                                @if (!string.IsNullOrEmpty(item.CATNo))
                                                {
                                                    <b>CAT No:</b> @item.CATNo<br />
                                                }
                                                <b>CAS No:</b> @item.CASNo<br />
                                                <b>Order Quantity:</b> @item.RequiredQty <span>mg</span><br />

                                                @if (!string.IsNullOrEmpty(item.Price))
                                                {
                                                    var allpricedata = item.Price.Split(',');
                                                    var alldata = new List<string>();
                                                    foreach (var priitem in allpricedata)
                                                    {
                                                        var prilist = priitem.Split('@');
                                                        var isNumeric = System.Text.RegularExpressions.Regex.IsMatch(prilist[1], @"\d");
                                                        if (isNumeric)
                                                        {
                                                            if (prilist[1].Contains("X"))
                                                            {
                                                                int mgdata = Convert.ToInt32(prilist[0].Trim().Split(' ')[0]);
                                                                int price = Convert.ToInt32(prilist[1].Trim().Split(' ')[0]);
                                                                var pack = 0;

                                                                if (priitem.Split('X')[1].Trim().Contains("="))
                                                                {
                                                                    pack = Convert.ToInt32(priitem.Split('X')[1].Trim().Split(' ')[0]);
                                                                }
                                                                else
                                                                {
                                                                    pack = Convert.ToInt32(priitem.Split('X')[1].Trim());
                                                                }

                                                                alldata.Add(mgdata * pack + " mg@" + (price * pack) + " " + prilist[1].Trim().Split(' ')[1] + "(" + mgdata + " mg*" + pack + "vials)");

                                                            }
                                                            else
                                                            {
                                                                alldata.Add(priitem);
                                                            }
                                                        }
                                                    }
                                                    var str = string.Join(", ", alldata);
                                                    if (!string.IsNullOrEmpty(str))
                                                    {
                                                        strprice = str;
                                                    }
                                                }

                                                @if (!string.IsNullOrEmpty(item.FinalPrice))
                                                {
                                                    total += Convert.ToDecimal(System.Text.RegularExpressions.Regex.Match(item.FinalPrice, @"\d+").Value);

                                                    <b>Price:</b> @item.FinalPrice<br />
                                                }
                                                else
                                                {
                                                    if (item.Price.Contains("@"))
                                                    {
                                                        string finpri = item.Price.Split('@')[1];
                                                        total += Convert.ToDecimal(System.Text.RegularExpressions.Regex.Match(finpri, @"\d+").Value);
                                                    }
                                                    <b>Price:</b> @item.Price<br />
                                                }

                                                <b>Lead Time:</b> @item.LeadTime<br />
                                                @if (!string.IsNullOrEmpty(item.OrderRemark))
                                                {
                                                    <b>Pack Size:</b> @item.OrderRemark<br />
                                                }
                                                @if (item.EstimateDispatchDate.HasValue)
                                                {
                                                    <b>Schedule Dispatch Date:</b> @item.EstimateDispatchDate.Value.ToShortDateString()<br />
                                                }
                                                @*@if (!string.IsNullOrEmpty(item.DataRemark))
                                                    {
                                                        <b>Data Included:</b> <span>COA, HPLC, IR, Mass, 1H NMR, TGA, @item.DataRemark </span><br />
                                                    }
                                                    else
                                                    {
                                                        <b>Data Included:</b> <span>COA, HPLC, IR, Mass, 1H NMR, TGA</span><br />
                                                    }*@


                                                @*@if (!string.IsNullOrEmpty(item.TracebilityCost))
                                                    {
                                                        totalprice += Convert.ToInt32(item.TracebilityCost);
                                                        <b>Traceability Cost:</b> @item.TracebilityCost<span> </span> @item.Currency
                                                        <br />
                                                    }
                                                    @if (!string.IsNullOrEmpty(item.AddTestCost))
                                                    {
                                                        totalprice += Convert.ToInt32(item.AddTestCost);
                                                        <b>Additional Tests charges:</b> @item.AddTestCost<span> </span> @item.Currency
                                                        <br />
                                                    }
                                                    @if (!string.IsNullOrEmpty(item.ColdShipCost))
                                                    {
                                                        totalprice += Convert.ToInt32(item.ColdShipCost);
                                                        <b>Shipment Cost:</b> @item.ColdShipCost<span> </span> @item.Currency
                                                        <br />
                                                    }*@


                                                @if (!string.IsNullOrEmpty(item.AddTestCostRemark))
                                                {
                                                    <b>Included Analytical Data:</b> <span> COA, HPLC, IR, MASS, 1H-NMR, TGA, @item.AddTestCostRemark.Replace("(p)", "").Replace("(f)", "")</span><br />
                                                }
                                                else
                                                {
                                                    <b>Included Analytical Data:</b> <span> COA, HPLC, IR, MASS, 1H-NMR, TGA</span><br />
                                                }
                                                @if (!string.IsNullOrEmpty(item.AddTestCost) && item.AddTestCost != "0")
                                                {
                                                    totalprice += Convert.ToInt32(item.AddTestCost);
                                                    <b>Additional Analysis Cost:</b> @item.AddTestCost<span> </span> @item.SZ_QuotationData.Currency

                                                    <br />
                                                }
                                                @if (!string.IsNullOrEmpty(item.TracebilityCostRemark))
                                                {
                                                    <b>Traceability Information:</b> <span>@item.TracebilityCostRemark.Replace("(p)", "").Replace("(f)", "")</span>
                                                    <br />
                                                }
                                                @if (!string.IsNullOrEmpty(item.TracebilityCost))
                                                {
                                                    totalprice += Convert.ToInt32(item.TracebilityCost);
                                                    <b>Traceability Cost:</b> @item.TracebilityCost<span> </span> @item.SZ_QuotationData.Currency

                                                    <br />
                                                }


                                                @if (!string.IsNullOrEmpty(item.ColdShipCost))
                                                {
                                                    totalprice += Convert.ToInt32(item.ColdShipCost);
                                                    <b>Shipment Charges:</b> @item.ColdShipCost<span> </span> @item.SZ_QuotationData.Currency
                                                    if (!string.IsNullOrEmpty(item.ColdShipCostRemark))
                                                    {
                                                        <span>(@item.ColdShipCostRemark)</span>
                                                    }
                                                    <br />
                                                }

                                                @if (!string.IsNullOrEmpty(item.TracebilityCost)
                                                     || !string.IsNullOrEmpty(item.TracebilityCost)
                                                     || !string.IsNullOrEmpty(item.TracebilityCost))
                                                {
                                                    var finalprice = "";
                                                    var spltcomma = strprice.Split(',');
                                                    foreach (var itemcomma in spltcomma)
                                                    {
                                                        if (!string.IsNullOrEmpty(itemcomma))
                                                        {
                                                            var splitat = itemcomma.Split('@');
                                                            var splitspace = itemcomma.Split('@')[1].Split(' ');
                                                            var splitprice = Convert.ToInt32(splitspace[0]) + totalprice;
                                                            finalprice += splitat[0] + "@" + splitprice + " " + splitspace[1] + ",";
                                                        }
                                                    }
                                                    <span style="color:#367fa9">
                                                        <b>Total:</b><span> @finalprice</span>
                                                    </span>
                                                }

                                                @if (!string.IsNullOrEmpty(item.TechnicalEmail))
                                                {
                                                    <span style="color:#367fa9">
                                                        <b>Technical Contact:</b><span> @item.TechnicalEmail</span>
                                                    </span>
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            srno += 1;
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div style="width:100%; padding:0px; float:left;padding-top:10px;">
            <table width="100%">
                <thead>
                    <tr style="font-size:10px">
                        <th width="5%" style="text-align:center;">
                            <b>Sr. No.</b>
                        </th>
                        <th>
                            <b>Quotation Details</b>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int srno = 1;
                        foreach (var item in Model.OrderBy(x => x.DisplayOrder))
                        {
                            <tr style="color:#000;">
                                <td style="font-size:10px;text-align:center;border-bottom:1px solid #5c5c5c" width="5%">
                                    @srno
                                </td>
                                <td style="font-size:10px;text-align:left;border-bottom:1px solid #5c5c5c;padding-left:10px;" width="95%">
                                    <b>Name:</b> @item.ProductName<br />
                                    @if (!string.IsNullOrEmpty(item.CATNo))
                                    {
                                        <b>CAT No:</b> @item.CATNo<br />
                                    }
                                    <b>CAS No:</b> @item.CASNo<br />
                                    @if (!string.IsNullOrEmpty(item.FinalPrice))
                                    {
                                        total += Convert.ToDecimal(System.Text.RegularExpressions.Regex.Match(item.FinalPrice, @"\d+").Value);
                                        <b>Price:</b> @item.FinalPrice<br />
                                    }
                                    else
                                    {
                                        if (item.Price.Contains("@"))
                                        {
                                            string finpri = item.Price.Split('@')[1];
                                            total += Convert.ToDecimal(System.Text.RegularExpressions.Regex.Match(finpri, @"\d+").Value);
                                        }
                                        <b>Price:</b> @item.Price<br />
                                    }
                                    <b>Lead Time:</b> @item.LeadTime<br />
                                </td>
                            </tr>

                            srno += 1;
                        }
                    }
                </tbody>
            </table>
        </div>

    }

    <hrline />

    <div style="font-size:9px;">
        <b style="color:#000;">Total PO Value:</b> @total @currencyType <br />
        @if (isShipCharge)
        {
            <span>
                <b style="color:#000;">Shipping Charge:</b>100 @currencyType
            </span>
        }
    </div>
    <hrline />
    <div style="width:100%; padding:0px; padding-top:10px;">
        <span style="text-align:left;font-size:9px;color:#000;"> @Model[0].Remark</span>
    </div>

    @if (!string.IsNullOrEmpty(terms))
    {
        <div style="width:100%; padding:0px; padding-top:10px;">
            <span style="text-align:left;font-size:9px;color:#000;"> @Html.Raw(terms)</span>
        </div>
    }


    <hrline />
</div>

