@{
    ViewBag.Title = "Quotation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isCulbQuotationValue = Convert.ToBoolean(ViewBag.IsClubQuote);
}
@model Synzeal_Inventory.Entity.SZ_Quotation
<style type="text/css">
    #batchTbl {
        margin: 0 10px;
        width: 60%;
    }

        #batchTbl th, #batchTbl tr td {
            padding: 5px;
            text-align: center;
            border: 1px solid #3c8dbc;
        }

        #batchTbl th {
            background: #3c8dbc;
            color: #fff;
        }

    #profrm .col-sm-8 {
        padding-top: 7px;
    }

    #dvTempProductList .protempdet {
        height: 1%;
        overflow: hidden;
        padding: 4px 0;
        margin: -1px 0 0;
    }

        #dvTempProductList .protempdet + .protempdet {
            border-top: 1px solid #3c8dbc;
        }

    #dvTempProductList .form-group {
        margin-bottom: 0px;
    }
</style>
<section class="content-header">
    <h1>
        Generate Quotation
        @if (Model.Id != 0)
        {
            <span style="color: darkgreen;font-weight: bold;">(Ref # @Model.Ref)</span>
        }
        @if (!string.IsNullOrEmpty(Model.CreatedBy))
        {
            <span style="color: blue;font-weight: bold;font-size:11px">Created By @Model.CreatedBy</span>
        }
        <div style="float:right;padding-right:20px;font-size: 14px">
            <b style="float:left">Import Excel File : </b><input type="file" name="importNewFile" id="importNewFile" onchange="Quote.importNewProduct()" style="float: left;width: 40%;padding-left: 20px;
    padding: 0 20px 0 20px;font-size: 13px;" /><a href="~/Document/ImportNewsamplefile.xlsx" style="color:red" download>Download Sample File</a>
        </div>
    </h1>
</section>
<section class="content">
    <div class="row">
        <!-- left column -->
        <div id="expandicon" style="display:none">
            <i class="fa fa-bars" style="background:#3c8dbc; padding:5px 10px; font-size:22px;" onclick="expandCollapse(false)"></i>
        </div>
        <div class="col-md-3" id="leftsidediv">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Add New Quote</h3>
                    <i class="fa fa-bars" onclick="expandCollapse(true)" style="float:right"></i>
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <form role="form">
                    <div class="box-body">
                        <div class="form-group">
                            <input type="hidden" id="isClubQuote" name="isClubQuote" value="@isCulbQuotationValue.ToString()" />
                            <label for="exampleInputEmail1">Company Name</label>
                            <input type="hidden" id="QuoteId" name="QuoteId" value="0" />
                            <input type="hidden" id="UniqueId" name="UniqueId" value="@Guid.NewGuid()" />
                            @*<input type="text" class="form-control" id="CompanyName" name="CompanyName" placeholder="Company Name" required>*@
                            @Html.DropDownList("CompanyId", (IEnumerable<SelectListItem>)ViewBag.listCompItems, new { @class = "form-control" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Email Address</label>
                            <input type="email" class="form-control" id="Email" name="Email" placeholder="Email Address" autocomplete="off" required>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">CC Email Address<span style="font-size:13px"><i>(Use comma(;) when you use multiple email)</i></span></label>
                            <input type="email" class="form-control" id="EmailCC" name="EmailCC" placeholder="CC Email Address" autocomplete="off" required>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Client Reference</label>
                            <input type="email" class="form-control" id="ClientRef" name="ClientRef" placeholder="Client Reference" autocomplete="off">
                        </div>
                        <div class="form-group">
                            <div class="col-md-8"><label for="exampleInputPassword1">Is Image Attached In Pdf ?</label></div>
                            <div class="col-md-4"><input type="checkbox" style="margin-left:15px;" id="IsImageAttach" name="IsImageAttach" checked /></div>
                        </div>
                        <div class="form-group">

                            <div class="col-md-8">
                                <label for="exampleInputPassword1">To be quotation ?</label>
                            </div>
                            <div class="col-md-4">
                                <input type="checkbox" style="margin-left:15px;" id="IsToBe" name="IsToBe" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-8">
                                <label for="exampleInputPassword1">Is Approved ?</label>
                            </div>
                            <div class="col-md-4">
                                <input type="checkbox" style="margin-left:15px;" id="IsQuoteApproved" name="IsQuoteApproved" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-8">
                                <label for="exampleInputPassword1">Auction ?</label>
                            </div>
                            <div class="col-md-4">
                                <input type="checkbox" style="margin-left:15px;" id="Auction" name="Auction" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-8">
                                <label for="exampleInputPassword1">COA ?</label>
                            </div>
                            <div class="col-md-4">
                                <input type="checkbox" style="margin-left:15px;" id="IsCOA" name="IsCOA" />
                            </div>


                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Terms</label>
                            @Html.DropDownList("TermsId", (IEnumerable<SelectListItem>)ViewBag.termsList, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <div class="radio">
                                <label style="padding-right:25px;">
                                    <input type="radio" id="CountryType" name="CountryType" value="Domestic">
                                    Domestic
                                </label>
                                <label>
                                    <input type="radio" id="CountryType" name="CountryType" value="Export">
                                    Export
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="radio">
                                <label style="padding-right:25px;">
                                    <input type="radio" id="UserDistType" name="UserDistType" value="User">
                                    User
                                </label>
                                <label>
                                    <input type="radio" id="UserDistType" name="UserDistType" value="Distributor">
                                    Distributor
                                </label>
                            </div>
                        </div>
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Product</h3>
                        </div>
                        <div class="form-group">
                            <div class="radio">
                                <label style="padding-right:25px;">
                                    <input type="radio" name="productsRadios" value="db">
                                    From Database
                                </label>
                                <label>
                                    <input type="radio" name="productsRadios" value="new">
                                    New Product
                                </label>
                            </div>
                        </div>
                        <div style="display:none" id="dvFromDb">
                            <div style="padding:8px;border:1px solid #3c8dbc">
                                <div class="form-group col-md-12">
                                    <label for="exampleInputPassword1">Product Name/CAS No/CAT No</label>
                                    <input type="text" class="form-control" id="ProductName" name="ProductName" placeholder="Product Name/CAS No/CAT No" required>
                                </div>
                                @*<div class="form-group col-md-4">
                                        <label for="exampleInputPassword1">CAS No</label>
                                        <input type="text" class="form-control" id="CasNo" name="CasNo" placeholder="CAS No" required>
                                    </div>
                                    <div class="form-group  col-md-4">
                                        <label for="exampleInputPassword1">CAT No</label>
                                        <input type="text" class="form-control" id="CATNo" name="CATNo" placeholder="CAT No" required>
                                    </div>*@
                                <div class="form-group" style="text-align:right">
                                    @*<button type="button" onclick="Quote.searchProduct()" class="btn btn-primary">Search</button>*@

                                    <button type="button" onclick="Quote.getProductDetails()" class="btn btn-primary">Get Details</button>
                                    @*<button type="button" onclick="Quote.findProduct()  getPreviousInfoFromDB()" class="btn btn-primary">Find Product</button>*@

                                    @*<button type="button" onclick="Quote.getPreviousInfoFromDB()" class="btn btn-primary">Get Quotation History</button>*@
                                    <button type="button" onclick="Quote.findProduct()" class="btn btn-primary">Find Product</button>
                                    <button type="button" onclick="Quote.addMultipleProduct()" class="btn btn-primary">Add</button>
                                </div>
                            </div>
                            <div class="form-horizontal" id="dvProInfo" style="display:none;">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Product Details</h3>
                                </div>
                                <div class="box-body">
                                    <div class="form-group">
                                        <label for="inputEmail3" class="col-sm-2 control-label">Product Name : </label>
                                        <input type="hidden" id="productId" name="productId" />
                                        <input type="hidden" id="proDBImagePath" name="proDBImagePath" />
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="detFromDBProductName" name="detFromDBProductName" placeholder="Product Name">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">CAS No : </label>
                                        <div class="col-sm-10">
                                            <p id="detFromDBCasno" style="padding-top: 7px;"></p>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">CAT No : </label>
                                        <div class="col-sm-10">
                                            <p id="detFromDBCatno" style="padding-top: 7px;"></p>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">Batch Details : </label>
                                        <div class="col-sm-10">
                                            <table id="batchTbl">
                                                <thead>
                                                    <tr>
                                                        <th>Batch No</th>
                                                        <th>Qty</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="detFromBatchDetails"></tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">Price/Qty : </label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="price" name="price" placeholder="Price/Qty" required>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">Lead Time : </label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="leadtime" name="leadtime" placeholder="Lead Time">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-2 control-label">Product Remark : </label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="productremark" name="productremark" placeholder="Product Remark">
                                        </div>
                                    </div>

                                </div>
                                <div style="float:right">
                                    <img id="detFromDBImage" src="" width="100%" />
                                    <div>
                                        <label for="inputPassword3" class="col-sm-10 control-label"></label>
                                        <div>
                                            <button type="button" class="btn btn-primary" onclick="Quote.addFromDBProduct()">Add Product</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="display:none" id="dvNewProduct">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Product Name</label>
                                <input type="text" class="form-control" id="detNewProductName" name="detNewProductName" placeholder="Product Name">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">CAS No</label>
                                <input type="text" class="form-control" id="detNewCasno" name="detNewCasno" placeholder="CAS No">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">Upload Image(Optional)</label>
                                <input type="file" class="form-control" id="detNewFile" name="detNewFile" placeholder="Product Name">
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">Price/Qty</label>
                                <input type="text" class="form-control" id="dtNewprice" name="dtNewprice" placeholder="Price/Qty" required>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">Lead Time</label>
                                <input type="text" class="form-control" id="detNewleadtime" name="detNewleadtime" placeholder="Lead Time">
                            </div>
                            <div class="form-group">
                                <label for="inputPassword3">Product Remark : </label>
                                <input type="text" class="form-control" id="detNewproductremark" name="detNewproductremark" placeholder="Product Remark">
                            </div>
                            <div class="box-body">
                                <img id="detFromDBImage" src="" width="100%" />
                                <div class="form-group">
                                    <label for="inputPassword3" class="col-sm-7 control-label"></label>
                                    <div class="col-sm-2">
                                        <button type="button" class="btn btn-primary" onclick="Quote.addNewProduct()">Add Product</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->

                    <div class="box-body">
                        <div class="form-group">
                            <label for="exampleInputPassword1">Remarks</label>
                            <input type="text" class="form-control" id="Remarks" name="Remarks" placeholder="Remarks">
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">PO Number</label>
                            <input type="text" class="form-control" id="PONumber" name="PONumber" placeholder="PO Number">
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">PO Date</label>
                            <input type="text" class="form-control" id="PODate" name="PODate" placeholder="PO Number" data-value="@Model.PODate">
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Suggested Chemical Name</label>
                            <input type="text" class="form-control" id="SuggChemName" name="SuggChemName" placeholder="Suggested Chemical Name">
                        </div>
                        <div>
                            <label for="exampleInputPassword1">Attachment</label>
                            <input type="file" name="UploadFile" id="txtUploadFile" class="makethispretty" />
                        </div>
                        <div id="multiimagediv"></div>
                    </div>

                    <div class="box-footer">
                        <button type="button" class="btn btn-primary" onclick="Quote.saveQuote(false)">Save</button>
                        <button type="button" class="btn btn-primary" onclick="Quote.saveQuote(true)">Save Quotation & PDF </button>
                        <button type="button" class="btn btn-primary" onclick="Quote.saveQuote(false, true)">Save Quotation & Mail </button>
                    </div>
                </form>
            </div>
            <!-- /.box -->

        </div>
        <div class="col-md-9" id="rightsidediv">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Added Product List</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <i class="fa fa-arrows-alt" id="divFullscreen"></i>
                    </div>

                    @*<div style="float:right;padding-right:20px;">
                <b style="float:left">Import Excel File : </b><input type="file" name="importNewFile" id="importNewFile" onchange="Quote.importNewProduct()" style="float:left;width: 40%;padding-left:20px;" /><a href="~/Document/ImportNewsamplefile.xlsx" style="color:red" download>Download Sample File</a>
            </div>*@
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <div class="box-body">
                    <form role="form" id="dvTempProductList">
                        <div class="box-body">
                            <div style="text-align: center;color: lightgray;font-size: 36px;">
                                <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </form>
                </div>
            </div>
                <!-- /.box -->
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Previous Product List</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div>

                    </div>
                    <div class="box-body">
                        <!-- form start -->
                        <form role="form" id="dvPreviousProductList">
                            <div class="box-body">
                                <div style="text-align: center;color: lightgray;font-size: 36px;">
                                    <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                                </div>
                            </div>
                            <!-- /.box-body -->
                        </form>
                    </div>
                </div>
                <!-- /.box -->

                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Product List</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <div class="box-body">
                        <form role="form" id="dvFindProductList">
                            <div class="box-body">
                                <div style="text-align: center;color: lightgray;font-size: 36px;">
                                    <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                                </div>
                            </div>
                            <!-- /.box-body -->
                        </form>
                    </div>
                </div>

            </div>
    </div>
    <!-- /.row -->
</section>
<style>
    .attachitems {
        padding: 10px 10px 10px 15px;
        background: #ececec;
        margin: 5px;
        border-radius: 6px;
    }
</style>
<script type="text/javascript">

    function removeattachment(filename) {
        $('.attachitems').each(function () {
            if (filename === $(this).attr("data-filename")) {
                $(this).remove();
            }
        });
    }

    $(document).ready(function () {
        $('#txtUploadFile').on('change', function (e) {
            var files = e.target.files;
            //var myID = 3; //uncomment this to make sure the ajax URL works
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }

                    $.ajax({
                        type: "POST",
                        url: '/Form/UploadFiles',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            $("#multiimagediv").append('<div class="attachitems" data-filename="' + result + '"><a href="/Content/Attachment/' + result + '" target="_blank">' + result + '</a><i class="fa fa-remove" style="float: right;color: red;margin-top: 5px;" onclick="removeattachment(\'' + result + '\')"></i></div>');
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });
        $("#divFullscreen").click(function () {
            $("#dvTempProductList").fullscreen();
        });

        $("input[name='productsRadios']").change(function () {
            var value = $(this).val();
            if (value === "new") {
                $("#dvNewProduct").show();
                $("#dvFromDb").hide();
            }
            else {
                $("#dvFromDb").show();
                $("#dvNewProduct").hide();
            }
        });

        //$("#ProductName").autocomplete({
        //    source: function (request, response) {
        //        $.ajax({
        //            url: "/Form/GetProduct",
        //            dataType: "json",
        //            data: {
        //                term: request.term
        //            },
        //            success: function (data) {
        //                var items = [];
        //                $.each(data, function (key, val) {
        //                    var obj = {
        //                        "value": val.Name,
        //                        "id": val.id,
        //                        "label": val.Name,
        //                    };
        //                    items.push(obj);
        //                });
        //                response(items);
        //            }
        //        });
        //    },
        //    minLength: 1,
        //    select: function (event, ui) {
        //    }
        //});

        $(document).on("focus", "#tblalready td", function () {
            $('#tblalready').find('td').removeClass('addcolorbg');
            $(this).addClass('addcolorbg');
        });
        $(document).on("focus", "#tbltempproduct td", function () {
            $('#tbltempproduct').find('td').removeClass('addcolorbg');
            $(this).addClass('addcolorbg');
        });
    });
</script>
<style>
    .addcolorbg {
        background: #72a4c1;
    }

        .addcolorbg a {
            color: #fff;
        }
</style>
@if (Model.Id > 0)
{
    <text>
        <script type="text/javascript">
            $(document).ready(function () {
                $("#QuoteId").val('@Model.Id');
                $("#CompanyName").val('@Model.CompanyName');
                $("#Email").val('@Model.EmailAddress');
                $("#ClientRef").val('@Model.ClientRef');
                $("#PONumber").val('@Model.PONo');
                $("#EmailCC").val('@Model.EmailCC');
                if ('@Model.IsImageAttach') {
                    $('#IsImageAttach').attr('checked',true);
                }
                if ('@Model.IsToBe' !== "" && '@Model.IsToBe' != 'False') {
                    $('#IsToBe').attr('checked',true);
                }
                if ('@Model.IsQuoteApproved' !== "" && '@Model.IsQuoteApproved' != 'False') {
                    $('#IsQuoteApproved').attr('checked',true);
                }
                if ('@Model.Auction' != '' && '@Model.Auction' != 'False') {
                    $('#Auction').attr('checked',true);
                }
                if ('@Model.IsCOA' != '' && '@Model.IsCOA' != 'False') {
                    $('#IsCOA').attr('checked',true);
                }
                $("#TermsId").val('@Model.TermsId');
                $("#Remarks").val('@Model.Remark');
                if('@Model.CountryType' != null && '@Model.CountryType' != "")
                {
                     $("input[name=CountryType][value=" + '@Model.CountryType' + "]").prop('checked', true);
                }
             if('@Model.UserDistType' != null && '@Model.UserDistType' != "")
            {
                $("input[name=UserDistType][value=" + '@Model.UserDistType' + "]").prop('checked', true);
            }
                $("#SuggChemName").val('@Model.SuggChemName');
                if('@Model.Attachment' != null && '@Model.Attachment' != "")
                {
                    var str = '@Model.Attachment'.split(',');
                    $(str).each(function (i, v) {
                        $("#multiimagediv").append('<div class="attachitems" data-filename="' + v + '"><a href="/Content/Attachment/' + v + '" target="_blank">' + v + '</a><i class="fa fa-remove" style="float: right;color: red;margin-top: 5px;" onclick="removeattachment(\'' + v + '\')"></i></div>');
                    });
                }

                var dateValue = $("#PODate").attr('data-value');
                if (dateValue !== '') {
                    dateValue = dateValue.toString().replace(' 00:00:00', '');
                    $("#PODate").datepicker("setDate", dateValue);
                }

                // Load all product of quotation
                Quote.getProductListForQuote('@Model.Id');

                GetAllEmailByCompanyId('@Model.CompanyId')

            });
        </script>
    </text>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('input[name=productsRadios]').each(function () {
            var value = $(this).val();
            if (value === "db") {
                $(this).click();
            }
        });

        var dateValue = $("#PODate").attr('data-value');
        if (dateValue !== '') {
            dateValue = dateValue.toString().replace(' 00:00:00', '');
            $("#PODate").datepicker("setDate", dateValue);
        }

    });
</script>
<style type="text/css">
    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
        display: inline-block;
    }

    input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
    }

        input[type=text] {
            background-color: #f1f1f1;
            width: 100%;
        }

        input[type=submit] {
            background-color: DodgerBlue;
            color: #fff;
        }

    .autocomplete-items {
        position: relative;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>

@if (ViewBag.IsClubQuote)
{
    <text>
        <script type="text/javascript">
            $(document).ready(function () {
                Quote.tempProductListForQuote();
            });
        </script>
    </text>
}

<script type="text/javascript">
    $('#PODate').datepicker({
        format: 'dd/mm/yyyy',
        onSelect: function (dateText, inst) {

        }
    })
    function autocomplete(inp, arr) {
        /*the autocomplete function takes two arguments,
        the text field element and an array of possible autocompleted values:*/
        var currentFocus;
        /*execute a function when someone writes in the text field:*/
        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {

                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;
                        //GetCompanyDetailsFromEmail(inp.value);
                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });
        /*execute a function presses a key on the keyboard:*/
        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
                /*If the arrow DOWN key is pressed,
                increase the currentFocus variable:*/
                currentFocus++;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 38) { //up
                /*If the arrow UP key is pressed,
                decrease the currentFocus variable:*/
                currentFocus--;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 13) {
                /*If the ENTER key is pressed, prevent the form from being submitted,*/
                e.preventDefault();
                if (currentFocus > -1) {
                    /*and simulate a click on the "active" item:*/
                    if (x) x[currentFocus].click();
                }
            }
        });
        inp.addEventListener("focus", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            //if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {

                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;
                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });
        function addActive(x) {
            /*a function to classify an item as "active":*/
            if (!x) return false;
            /*start by removing the "active" class on all items:*/
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            /*add class "autocomplete-active":*/
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            /*a function to remove the "active" class from all autocomplete items:*/
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            /*close all autocomplete lists in the document,
            except the one passed as an argument:*/
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
        
        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }

    // autocomplete(document.getElementById("PONumber"), countries);

    $("#CompanyId").change(function () {
        GetAllEmailByCompanyId($(this).val());
        Quote.getCompInformation($(this).val());
    });

    GetAllEmail();
    function GetAllEmail() {
        $.ajax({
            url: "/Form/GetAllEmail",
            dataType: "json",
            data: {},
            success: function (data) {
                autocomplete(document.getElementById("Email"), data);
            }
        });
    }

    function GetAllEmailByCompanyId(compId) {
        $.ajax({
            url: "/Form/GetAllEmailByCompanyId",
            dataType: "json",
            data: {
                compId: compId
            },
            success: function (data) {
                autocomplete(document.getElementById("Email"), data);
            }
        });
    }

    function GetCompanyDetailsFromEmail(email) {
        $.ajax({
            url: "/Form/GetCompanyDetailsFromEmail",
            dataType: "json",
            data: {
                email: email
            },
            success: function (data) {
                if (data.length > 0) {
                    $("#CompanyId").val(data[0]);
                    GetAllEmailByCompanyId(data[0]);
                    Quote.getCompInformation(data[0]);
                }
            }
        });
    }

    function expandCollapse(expand) {
        if (expand) {
            $('#leftsidediv').css('display', 'none');
            $('#rightsidediv').addClass('col-md-12');
            $('#rightsidediv').removeClass('col-md-9');
            $('#expandicon').css('display', 'block');
        }
        else {
            $('#leftsidediv').css('display', 'block');
            $('#rightsidediv').addClass('col-md-9');
            $('#rightsidediv').removeClass('col-md-12');
            $('#expandicon').css('display', 'none');
        }
    }
    function editallalreadyProduct() {
        $('#tblalready  > tbody').find('tr').each(function () {
            $(this).find('label').hide();
            $(this).find('input').show();
        });
    }

    function deleteallalreadyProduct() {
        var count = 1;
        var forloopcnt = 0;
        $('.delclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        if (forloopcnt === 0) {
            toastr.error("Please select product");
            return false;
        }

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this product!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {

                    $('.delclass').each(function () {
                        if ($(this).is(":checked")) {
                            var quoteId = $("#QuoteId").val();
                            var id = $(this).val();
                            var obj = {
                                id: id
                            };
                            if (id != undefined) {

                                $.ajax({
                                    url: "/Form/DeleteProductFromQuoteDetails?id=" + id,
                                    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                                    data: JSON.stringify({ model: obj }),
                                    type: 'POST',
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        if (data.success) {
                                            //  Quote.getProductListForQuote(quoteId);
                                            //window.location.href = "/Form/Quotation/" + quoteId;
                                        }
                                    },
                                    complete: function (data) {
                                        successAlert(count, forloopcnt, quoteId);
                                        count += 1;
                                    }
                                });
                            }
                        }
                    });



                } else {
                    toastr.error("Your added product is safe :)");
                }
            });



    }

    function deletetempalreadyProduct() {
        var count = 1;
        var forloopcnt = 0;
        $('.deltempclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        if (forloopcnt === 0) {
            toastr.error("Please select product");
            return false;
        }

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this product!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    var isCulbQuotation = $("#isClubQuote").val();
                    $('.deltempclass').each(function () {
                        if ($(this).is(":checked")) {
                            var quoteId = $("#QuoteId").val();
                            var id = $(this).val();
                            var obj = {
                                id: id
                            };
                            if (id != undefined) {

                                $.ajax({
                                    url: "/Form/DeleteTempProduct?id=" + id + "&isClubQuote=" + isCulbQuotation,
                                    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                                    data: JSON.stringify({ model: obj }),
                                    type: 'POST',
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        if (data.success) {
                                            //  Quote.getProductListForQuote(quoteId);
                                            //window.location.href = "/Form/Quotation/" + quoteId;
                                        }
                                    },
                                    complete: function (data) {
                                        successTempAlert(count, forloopcnt, quoteId);
                                        count += 1;
                                    }
                                });
                            }
                        }
                    });



                } else {
                    toastr.error("Your added product is safe :)");
                }
            });



    }

    function synthesisProduct(isPurchase) {

        var count = 1;
        var forloopcnt = 0;
        $('.synthesislogclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        $('.synthesislogclass').each(function () {
            if ($(this).is(":checked")) {
                var quoteId = $("#QuoteId").val();
                var id = $(this).val();
                var obj = {
                    id: id
                };
                if (id != undefined) {

                    $.ajax({
                        url: '/Form/SaveSynthesisLog',
                        //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                        data: JSON.stringify({ model: obj }),
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (data.success) {
                                //  Quote.getProductListForQuote(quoteId);
                                //window.location.href = "/Form/Quotation/" + quoteId;
                            }
                        },
                        complete: function (data) {
                            successAlert(count, forloopcnt, quoteId);
                            count += 1;
                        }
                    });
                }
            }
        });

    }

    var isCOADownloadWithQuote = false;

    function saveallalreadyProduct(isCOA) {
        debugger;
        isCOADownloadWithQuote = isCOA;
        var count = 1;
        var forloopcnt = parseInt($('#tblalready').find('tr').length) - 1;
        $('#tblalready').find('tr').each(function () {
            var id = $(this).attr("data-id");
            var quoteId = $(this).attr("data-quoteid");
            var productname = $("#productname_" + id).val();
            var price = $("#price_" + id).val();
            var finalprice = $("#finalprice_" + id).val();
            var casno = $("#casno_" + id).val();
            var catno = $("#catno_" + id).val();
            var leadtime = $("#leadtime_" + id).val();
            var displayorder = $("#displayorder_" + id).val();
            var productremark = $("#productremark_" + id).val();
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var synthesislog = $("#synthesislog_" + id).is(':checked');
            var obj = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                finalprice:finalprice,
                leadtime: leadtime,
                displayOrder: displayorder,
                productremark: productremark,
                estimateDispatchDate: estimateDispatchDate,
                id: id,
                synthesislog: synthesislog,
                actionname: 'partialproductupdate'
            };

            if (id != undefined) {
                $.ajax({
                    url: '/Form/UpdateProductInfo',
                    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                    data: JSON.stringify({ model: obj }),
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            //  Quote.getProductListForQuote(quoteId);
                            //window.location.href = "/Form/Quotation/" + quoteId;
                        }
                    },
                    complete: function (data) {
                        successAlert(count, forloopcnt, quoteId);
                        count += 1;
                    }
                });
            }
        })

    }

    function editTempPartialProductDetails() {
        $('#tbltempproduct  > tbody').find('tr').each(function () {
            $(this).find('label').hide();
            $(this).find('input').show();
        });
    }

    function SaveallTempPartialProductDetails() {

        var count = 1;
        var forloopcnt = $('#tbltempproduct > tbody').find('tr').length;
        $('#tbltempproduct  > tbody').find('tr').each(function () {

            var id = $(this).attr("data-id");
            var quoteId = $("#QuoteId").val();
            var productname = $("#productnametemp_" + id).val();
            var price = $("#pricetemp_" + id).val();
            var casno = $("#casnotemp_" + id).val();
            var catno = $("#catnotemp_" + id).val();
            var leadtime = $("#leadtimetemp_" + id).val();
            var proRemark = $("#productremark_" + id).val();
            var synthesislogtemp = $("#synthesislogtemp_" + id).is(':checked');
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var model = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                leadtime: leadtime,
                productremark: proRemark,
                id: id,
                estimateDispatchDate: estimateDispatchDate,
                synthesislog: synthesislogtemp
            };
            $.ajax({
                url: '/Form/UpdateTempProductInfo',
                data: model,
                type: 'POST',
                success: function (data) {
                    if (data.success) {
                        //  Quote.tempProductListForQuote();
                    }
                },
                complete: function (data) {
                    successTempAlert(count, forloopcnt, quoteId);
                    count += 1;
                }
            });
        })
    }

    function successTempAlert(count, forloopcount, quoteId) {
        if (count === forloopcount) {

            Quote.tempProductListForQuote();

        }
    }

    function successAlert(count, forloopcount, quoteId) {
        if (count === forloopcount) {
            if (!isCOADownloadWithQuote) {
                Quote.getProductListForQuote(quoteId);
            }
        }
    }

    function showpopupInfo(id, quotedetailsId) {
        $.ajax({
            url: '/Form/showpopupInfo?id=' + id + '&quoteDetailsId=' + quotedetailsId,
            data: {},
            type: 'GET',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-dialog').css('width', '1000px');
                $('#invoiceQueryModal .modal-content').css('width', '1000px');
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }

    function AllQuotePrice(id) {
        $.ajax({
            url: '/Form/AllQuotePrice?id=' + id,
            data: {},
            type: 'GET',
            traditional: true,
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }
</script>
<style>
    .lightred {
        color: lightcoral;
    }
</style>