@{
    ViewBag.Title = "Quotation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isQuoteViewOnly = Convert.ToBoolean(ViewBag.IsQuoteViewOnly);
    bool isCulbQuotationValue = Convert.ToBoolean(ViewBag.IsClubQuote);
    bool isWorking = Convert.ToBoolean(Model.IsWorking);
    var listofquotepdfs = ViewBag.SavedQuotationPDF as List<SZ_QuotationPDF>;
    if (!string.IsNullOrEmpty(Model.Attachment))
    {
        Model.Attachment = Model.Attachment.Trim();
    }
    else
    {
        Model.Attachment = "";
    }
}
@using Synzeal_Inventory.Entity;
@model Synzeal_Inventory.Entity.SZ_Quotation

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js" integrity="sha512-GDey37RZAxFkpFeJorEUwNoIbkTwsyC736KNSYucu1WJWFK9qTdzYub8ATxktr6Dwke7nbFaioypzbDOQykoRg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.css" integrity="sha512-63+XcK3ZAZFBhAVZ4irKWe9eorFG0qYsy2CaM5Z+F3kUn76ukznN0cp4SArgItSbDFD1RrrWgVMBY9C/2ZoURA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<style type="text/css">
    #batchTbl, #priceTbl {
        margin: 0 10px;
        width: 60%;
    }

        #batchTbl th, #batchTbl tr td, #priceTbl th, #priceTbl tr td {
            padding: 5px;
            text-align: center;
            border: 1px solid #3c8dbc;
        }

        #batchTbl th, #priceTbl th {
            background: #3c8dbc;
            color: #fff;
        }

    #profrm .col-sm-8 {
        padding-top: 7px;
    }

    #dvTempProductList .protempdet {
        height: 1%;
        overflow: hidden;
        padding: 4px 0;
        margin: -1px 0 0;
    }

        #dvTempProductList .protempdet + .protempdet {
            border-top: 1px solid #3c8dbc;
        }

    #dvTempProductList .form-group {
        margin-bottom: 0px;
    }

    #Emailautocomplete-list {
        position: absolute !important;
    }
</style>
<section class="content-header">
    <div class="col-md-5">
        @if (Model.Id != 0)
        {
            <h3>
                <input type="hidden" id="quoterefnumber" value="@Model.Ref" />
                <span style="color: darkgreen;font-weight: bold;">Quote ID # @Model.Ref</span>
            </h3>
        }
        @if (!string.IsNullOrEmpty(Model.CreatedBy))
        {
            <span style="color: blue;font-weight: bold;font-size:11px">Created By # @Model.CreatedBy<span>, </span>@Model.CreatedDate</span>
        }
        @if(Model.SZ_CompanyList != null && Model.SZ_CompanyList.IsConversionReport.HasValue && Model.SZ_CompanyList.IsConversionReport == true)
        {
                <span style="color: #fff;font-weight: bold;font-size:11px; background-color: darkslateblue">IMPORTANT</span>
        }
            @*@if (Model.CreatedDate != null)
            {
                <span style="color: blue;font-weight: bold;font-size:11px">on </span>
            }*@
        @if (!string.IsNullOrEmpty(Model.ApprovedBy))
        {
            <br />
            <span style="color: darkgreen;font-weight: bold;font-size:11px">Approved By # @Model.ApprovedBy</span>
        }
        @if (Model.QuoteValue > 0)
        {
            <span style="color: #1e4aad; font-weight: bold; font-size: 11px; margin-left: 10%; ">Quote Value # @Model.QuoteValue</span>
        }
        @if (Model.POValue > 0)
        {
            <span style="color: #1e4aad; font-weight: bold; font-size: 11px; "> , PO Value # @Model.POValue</span>
        }

        @if (Model.IsRFQ.HasValue && Model.IsRFQ.Value)
        {
            <span style="color: #b954b6; font-weight: bold; font-size: 14px">(RFQ)</span>
        }
    </div>

    <div class="col-md-3">
        <div>
            <input type="checkbox" id="IsUnderCorrection" name="IsUnderCorrection" style=" float: left; padding-right: 5px; margin-right: 8px; height: 22px; width: 22px; " />
            <label style=" padding-top: 10px; padding-right: 5px; "> Under Correction?</label>
        </div>
        <div>
            @*<input type="text" class="form-control" id="ConversionNumber" name="ConversionNumber" placeholder="Conversion Number" value="@Model.ConversionNumber" style="width: 93%; float: left">
                <i class="fa fa-copy" onclick="copymasterRecord('ConversionNumber')" style="float: right; margin-top: 5px; font-size: 21px;"></i>*@

            <input type="text" class="form-control" id="FollowupAdminRemark" value="@Model.FollowupAdminRemark" style="width: 70%; float: left">
            <input type="text" class="form-control" placeholder="Reminder" id="ReminderCount" value="@Model.ReminderCount" style="width: 27.5%; float: left; margin-left: 7px">

        </div>
    </div>
    <div class="col-md-4">
        <span style="font-size: 14px; ">
            @*<label>Email Date : </label> <input style="width:170px;display:inline-block" type="text" autocomplete="off" id="txtemailreceiveddate" class="form-control" data-value="@Model.EmailReceivedDate" />*@

            @Html.DropDownList("AssignTo", (IEnumerable<SelectListItem>)ViewBag.listAssignTo, new { @class = "form-control", @datavalue = Model.PaymentTerm, @style = "width:250px; float:left" })

            <button type="button" class="btn btn-primary" id="btnsave" style="margin-left:20px;" onclick="Quote.quotecompleted()">Quote Complete</button>
        </span>
        @if (Model.Id > 0)
        {
            <div style="padding-right: 20px;font-size: 14px;padding-top: 10px;">
                <b style="float:left">Import File : </b>
                <input type="file" name="importQuoteFile" id="importQuoteFile" onchange="Quote.importQuote()" style=" float: left; width: 40%; padding-left: 20px; margin-top: -14px;" />
                <a href="~/Document/ImportQuoteFilesamplefile.xlsx" style="color:red" download>Sample File</a>
            </div>
        }
        @*<label style=" float: left; padding-right: 5px; margin-right: 8px;padding-top:8px;">Conversation Number: </label> <input type="number" id="HelpScoatNumber" name="HelpScoatNumber" style=" float: left; padding-right: 5px; margin-right: 8px; width: 150px; background: #fff; height: 34px; border: 1px solid #000;" value="@Model.HelpScoatNumber" />*@

    </div>
    <div class="clearfix"></div>
</section>
<section class="content">
    <div class="row">
        <!-- left column -->
        <div id="expandicon" style="display:none">
            <i class="fa fa-bars" style="background:#3c8dbc; padding:5px 10px; font-size:22px;" onclick="expandCollapse(false)"></i>
        </div>
        <div class="col-md-6" id="leftsidediv">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Quotation Details <p class="pull-right" style=" font-size: 14px; float: right; margin-left: 56px; color: #065dfb; text-transform: capitalize;">@TempData["Quotation"]</p></h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-group col-md-6">
                        <input type="hidden" id="isClubQuote" name="isClubQuote" value="@isCulbQuotationValue.ToString()" />
                        @*<label for="exampleInputEmail1">Company Name</label>*@
                        <input type="hidden" id="QuoteId" name="QuoteId" value="0" />
                        <input type="hidden" id="UniqueId" name="UniqueId" value="@Guid.NewGuid()" />
                        @Html.DropDownList("CompanyId", (IEnumerable<SelectListItem>)ViewBag.listCompItems, new { @class = "form-control", @style = "width:90%; float:left" })

                        <i class="fa fa-plus-square" style="float: left;margin-left: 3%;margin-top: 8px;font-size: 19px;" onclick="addcompanypopup()"></i>
                    </div>
                    <div class="form-group col-md-6">
                        @*<label for="exampleInputPassword1">Email Address</label>*@
                        <input type="email" class="form-control" id="Email" name="Email" placeholder="Email Address" autocomplete="Off" required style="width:90%; float: left">
                        <i class="fa fa-refresh" onclick="GetQuotationAuditLog('@Model.Id', 'EmailAddress')" style=" padding-left: 10px; padding-top: 12px;"></i>
                    </div>
                    <div class="form-group col-md-6">
                        @*<label for="exampleInputPassword1">CC Email Address<span style="font-size:13px"><i>(Use comma(;))</i></span></label>*@
                        <input type="email" class="form-control" id="EmailCC" name="EmailCC" placeholder="CC Email Address (Use comma(;))" autocomplete="off" required>
                    </div>
                    <div class="form-group col-md-6">
                        @*<label for="exampleInputPassword1">Client Reference</label>*@
                        <input type="email" class="form-control" id="ClientRef" name="ClientRef" placeholder="Client Reference" autocomplete="off">
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-4">
                        <div style="border:1px solid #ececec;padding: 3px 8px;">
                            <label style="padding-right:60px;">
                                <input type="radio" id="CountryType" name="CountryType" value="Domestic" class="clsCountryType">
                                Domestic
                            </label>
                            <label>
                                <input type="radio" id="CountryType" name="CountryType" value="Export" class="clsCountryType">
                                Export
                            </label>
                            @Html.DropDownList("Currency", (IEnumerable<SelectListItem>)ViewBag.listItemscurrency, new { @class = "form-control", @style = "width: 90%;float: left;margin-top: 10px;margin-left: -9px;" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <div style="border:1px solid #ececec;padding: 3px 8px;">
                            <label style="padding-right:60px;">
                                <input type="radio" id="UserDistType" name="UserDistType" value="User">
                                User &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            </label>
                            <label>
                                <input type="radio" id="UserDistType" name="UserDistType" value="Distributor">
                                Distributor
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <div style="border:1px solid #ececec;padding: 3px 8px;">
                            <label style="padding-right:60px;">
                                <input type="radio" id="LayoutType" name="LayoutType" value="Custom">
                                Custom &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            </label>
                            <label>
                                <input type="radio" id="LayoutType" name="LayoutType" value="Standard" checked>
                                Standard
                            </label>
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="col-md-12" style="border: 1px solid #ececec;padding: 8px 10px;">
                            <div class="col-md-12">
                                <label for="exampleInputPassword1" style="float:left">To be ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsToBe" name="IsToBe" />
                                <span style="    float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Approved ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsQuoteApproved" name="IsQuoteApproved" />
                                <span style="    float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Auction ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="Auction" name="Auction" />
                                <span style="    float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">COA ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsCOA" name="IsCOA" checked />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Image ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsImageAttach" name="IsImageAttach" checked />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Followup ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsFollowupRequired" name="IsFollowupRequired" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Regret ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsRegret" name="IsRegret" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Study ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsStudy" name="IsStudy" />
                                <label for="exampleInputPassword1" style="float:left">Is RFQ ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsRFQManually" name="IsRFQManually" />
                            </div>
                            <div class="col-md-12" style="    margin-top: 8px;">
                                <label for="exampleInputPassword1" style="float:left">In-Stock ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsInstock" name="IsInstock" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Custom Synthesis ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsCustomSynthesis" name="IsCustomSynthesis" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Previewed ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsPreviewed" name="IsPreviewed" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Reviewed ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 10px;" id="IsReviewed" name="IsReviewed" />
                                <span style="    float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Is Shipped Charge ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsShippedCharge" name="IsShippedCharge" />
                                <span style="    float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Show in Dashboard ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsShowDashboard" name="IsShowDashboard" />
                                <span style="float: left;margin-right: 15px;font-weight: bold;font-size: 24px;margin-top: -8px;">|</span>
                                <label for="exampleInputPassword1" style="float:left">Analytical Data ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsAnalyticalData" name="IsAnalyticalData" />

                                <label for="exampleInputPassword1" style="float:left">Pre-Approved ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsPreApproved" name="IsPreApproved" />
                                <label for="exampleInputPassword1" style="float:left">Revision ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsRevision" name="IsRevision" />

                                <label for="exampleInputPassword1" style="float:left">Custom PDF Layout ?</label>
                                <input type="checkbox" style="margin-left:15px;float:left;margin-right: 15px;" id="IsCustomPDFLayout" name="IsCustomPDFLayout" />
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-12">
                        <input type="text" class="form-control" id="Url" name="Url" placeholder="Url" value="@Model.Url" title="@Model.Url" style="width: 95%; float: left">
                        @if (!string.IsNullOrEmpty(Model.Url))
                        {
                            <a href="@Model.Url" target="_blank"><i style="float: right; margin-top: 5px; font-size: 24px;" class='fa fa-upload'></i></a>
                        }
                    </div>
                    <div class="form-group col-md-12">
                        <input type="text" class="form-control" id="POUrl" name="POUrl" placeholder="PO Url" value="@Model.POUrl" title="@Model.POUrl" style="width: 95%; float: left">
                        @if (!string.IsNullOrEmpty(Model.POUrl))
                        {
                            <a href="@Model.POUrl" target="_blank"><i style="float: right; margin-top: 5px; font-size: 24px;" class='fa fa-upload'></i></a>
                        }
                    </div>
                    <div class="form-group col-md-5">
                    </div>
                    <div class="clearfix"></div>

                    <div class="form-group col-md-4">
                        @*<label for="exampleInputPassword1">Terms</label>*@
                        @Html.DropDownList("TermsId", (IEnumerable<SelectListItem>)ViewBag.termsList, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        @*<label for="exampleInputPassword1">Remarks</label>*@
                        <input type="text" class="form-control" id="Remarks" name="Remarks" placeholder="Remarks">
                    </div>
                    <div class="form-group col-md-4">
                        @*<label for="exampleInputPassword1">Attachment</label>*@
                        <input type="file" name="UploadFile" id="txtUploadFile" class="makethispretty" style="width: 100%;height: 35px;padding: 3px;" />
                    </div>
                    <div class="form-group col-md-4">
                        @*<label for="exampleInputPassword1">PO Number</label>*@
                        <input type="text" class="form-control" id="PONumber" name="PONumber" placeholder="PO Number">
                    </div>
                    <div class="form-group col-md-4">
                        @*<label for="exampleInputPassword1">PO Date</label>*@
                        <input type="text" class="form-control" id="PODate" name="PODate" placeholder="PO Number" data-value="@Model.PODate">
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownList("PaymentTerm", (IEnumerable<SelectListItem>)ViewBag.listPaymentTermsItems, new { @class = "form-control", @datavalue = Model.PaymentTerm, @style = "width:100%; float:left" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownList("IncoTerm", (IEnumerable<SelectListItem>)ViewBag.listIncoTermsItems, new { @class = "form-control", @datavalue = Model.IncoTerm, @style = "width:100%; float:left" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.DropDownList("DocumentTypeId", (IEnumerable<SelectListItem>)ViewBag.DocumentTypeList, new { @class = "form-control", @datavalue = Model.PaymentTerm, @style = "width:100%; float:left" })
                    </div>

                    <div class="form-group col-md-4">
                        <div id="multiimagediv"></div>
                        <input type="hidden" id="txtquotepdf" name="txtquotepdf" />
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-6">
                        <label>
                            PO Copy
                            @if (!string.IsNullOrEmpty(Model.QuotePDF))
                            {
                                <a href="@Model.QuotePDF" download=""><i class="fa fa-download"></i></a>
                            }
                        </label>
                        <input type="file" id="QuotePDF" name="QuotePDF" />
                    </div>
                    <div class="col-md-6">
                        <fieldset>
                            <legend style="background: #3c8dbc; margin-bottom: 10px; color: #fff; "><a href="javascript:void(0)" style=" font-weight: bold; color: #fff; font-size: 16px; padding-left: 10px;" onclick="collapseexpanddiv('divpurchasetechnical')">Purchase / Technical</a></legend>
                            <div id="divpurchasetechnical" data-collapstatus="Expand" style="display: none; ">
                                <div class="form-group col-md-6">
                                    <label>Purchase</label>
                                    <input type="text" id="PurchaseName" name="PurchaseName" value="@Model.PurchaseName" placeholder="Name" style="margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="PurchaseEmail" name="PurchaseEmail" value="@Model.PurchaseEmail" placeholder="Email" style="margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="PurchaseContactNo" name="PurchaseContactNo" value="@Model.PurchaseContactNo" placeholder="Contact No" style="margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="PurchaseAddress" name="PurchaseAddress" value="@Model.PurchaseAddress" placeholder="Address" style="margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="PurchaseCity" name="PurchaseCity" value="@Model.PurchaseCity" placeholder="City" style="margin-bottom: 5px;padding: 2px;" />
                                    @Html.DropDownList("PurchaseCountry", (IEnumerable<SelectListItem>)ViewBag.CountryList, Model.PurchaseCountry, new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>Technical</label>
                                    <input type="text" style="margin-bottom: 5px;padding: 2px;" id="TechnicalName" name="TechnicalName" placeholder="Name" value="@Model.TechnicalName" />
                                    <input type="text" id="TechnicalEmail" name="TechnicalEmail" value="@Model.TechnicalEmail" placeholder="Email" style="        margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="TechnicalContactNo" name="TechnicalContactNo" value="@Model.TechnicalContactNo" placeholder="Contact No" style="        margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="TechnicalAddress" name="TechnicalAddress" value="@Model.TechnicalAddress" placeholder="Address" style="        margin-bottom: 5px;padding: 2px;" />
                                    <input type="text" id="TechnicalCity" name="TechnicalCity" value="@Model.TechnicalCity" placeholder="City" style="        margin-bottom: 5px;padding: 2px;" />
                                    @Html.DropDownList("TechnicalCountry", (IEnumerable<SelectListItem>)ViewBag.CountryList, Model.TechnicalCountry, new { @class = "form-control" })
                                </div>
                            </div>
                        </fieldset>
                        <div class="clearfix"></div>
                    </div>

                    <div class="form-group col-md-6">
                        <label>Shipping Charges</label>
                        <input type="number" class="form-control" id="ShippingCharges" name="ShippingCharges" style="" value="@Model.ShippingCharges" />

                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-12">
                        <label>Quote Comment</label>
                    </div>
                    <div class="form-group col-md-6">
                        <label>Internal Comment</label>
                        <textarea class="form-control" rows="4" id="quotecomment" name="quotecomment" style="color: red;font-size: 20px"></textarea>
                        <input type="hidden" id="txtquotecomm" value="@Model.QuoteComment" />
                    </div>
                    <div class="form-group col-md-6">
                        <label>External Comment</label>
                        <textarea class="form-control" rows="4" id="externalcomment" name="externalcomment" style="color: red;font-size: 20px"></textarea>
                        <input type="hidden" id="txtexternalcomment" value="@Model.ExternalComment" />
                    </div>
                </div>
                <div class="box-footer">
                    <div style="float:left">
                        @*<button type="button" class="btn btn-primary" id="btnmail" onclick="Quote.saveQuote(false, true)">Mail </button>*@
                        @if (!string.IsNullOrEmpty(Model.Url))
                        {
                            <button type="button" class="btn btn-primary" id="btnmail" onclick="sendQuoteEmail()">Mail </button>
                        }
                    </div>
                    @if (Model.Id > 0)
                    {
                        <div style="float:left;margin-left: 25px;">

                            <button type="button" class="btn btn-primary" id="btnpark" onclick="Quote.Park(@Model.Id)">Park</button>
                            <button type="button" class="btn btn-primary" id="btndelete" onclick="Quote.deleteQuote(@Model.Id, true)">Delete</button>
                            @*<a class="btn btn-primary" href="javascript:void(0)" onclick="Quote.saveQuote(true,false,true)">Go to Dashboard</a>*@
                            <a class="btn btn-primary" href="javascript:void(0)" onclick="Quote.getProductListForHistoryQuote()">History</a>
                            <a class="btn btn-primary" href="javascript:void(0)" onclick="GetAuditLogForQuote(@Model.Id)">Log</a>
                            <a class="btn btn-primary" href="javascript:void(0)" onclick="RevalidateDay('@Model.CreatedDate.Value', @Model.QuoteValidDay )">Revalid</a>
                            <a class="btn btn-primary" href="javascript:void(0)" onclick="ConvertToOtherCurrancy(@Model.Id)">Convert</a>
                        </div>
                    }
                    <div style="text-align:right">
                        @*@if (Synzeal_Inventory.Models.SessionCookieManagement.IsAdmin)
                            {
                                if (Synzeal_Inventory.Models.SessionCookieManagement.UserEmail == "shailesh@synzeal.com" || Synzeal_Inventory.Models.SessionCookieManagement.UserEmail == "parthsuthar2010@gmail.com")
                                {
                                    <button type="button" class="btn btn-primary" id="btnsave" onclick="Quote.saveQuote(false, false,false, true, true)">App / Save / Close</button>
                                }
                                <button type="button" class="btn btn-primary" id="btnsave" onclick="Quote.saveQuote(false, false,false, true)">Save & Close</button>
                            }*@
                        <button type="button" class="btn btn-primary" id="btnsave" onclick="Quote.saveQuote(false)">Save</button>
                        <button type="button" class="btn btn-primary" id="btnpdf" onclick="Quote.saveQuote(true)">PDF </button>
                    </div>
                </div>
            </div>
            <!-- /.box -->
        </div>
        <div class="col-md-6" id="rightsidedivcolmd6">
            <div>
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Add Product in Quotation</h3>
                        <div class="box-tools pull-right">
                            <a onclick="stepmove('step1')" href="javascript:void(0)" style="text-decoration:underline;margin-right:10px;">Added Product</a>
                            <a onclick="stepmove('step2')" href="javascript:void(0)" style="text-decoration:underline;margin-right:10px;">Previous Product</a>
                            <a onclick="stepmove('step3')" href="javascript:void(0)" style="text-decoration:underline;margin-right:10px;">Product List</a>
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-3" style="padding:0">
                                    <label style="padding-right:25px;">
                                        <input type="radio" name="productsRadios" value="db">
                                        Database
                                    </label>
                                    <label>
                                        <input type="radio" name="productsRadios" value="new">
                                        New
                                    </label>
                                </div>
                                <div class="col-md-9 pull-right" style="text-align: right; padding:0">
                                    <div class="dvFromDb">
                                        <div class="form-group col-md-12">
                                            <input type="text" class="form-control" id="ProductName" name="ProductName" placeholder="Product Name/CAS No/CAT No" required style="float: left;width: 56%;">
                                            <button type="button" onclick="Quote.getProductDetails()" class="btn btn-primary">Get Details</button>
                                            <button type="button" onclick="Quote.findProduct()" class="btn btn-primary">Find Product</button>
                                            <button type="button" onclick="Quote.addMultipleProduct()" class="btn btn-primary">Add</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div style="display:none" class="dvFromDb">

                                <div class="form-horizontal" id="dvProInfo" style="display:none;">
                                    <div class="box-header with-border" style="padding:0">
                                        <h3 class="box-title">Product Details</h3>
                                    </div>
                                    <div class="box-body">
                                        <div class="col-md-12" style="padding:0">
                                            <div class="form-group" style="padding:0">
                                                <input type="hidden" id="productId" name="productId" />
                                                <input type="hidden" id="proDBImagePath" name="proDBImagePath" />
                                                <div class="col-sm-6" style="padding-right:0px;">
                                                    <input type="text" class="form-control" id="detFromDBProductName" name="detFromDBProductName" placeholder="Product Name">
                                                </div>
                                                <div class="col-sm-3">
                                                    <input type="text" class="form-control" id="detFromDBCasno" />
                                                </div>
                                                <div class="col-sm-3">
                                                    <input type="text" class="form-control" id="detFromDBCatno" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @*<label for="inputPassword3" class="col-sm-2 control-label" style="padding: 7px 0;">Price/Qty : </label>*@
                                                <div class="col-sm-12s table-responsive">
                                                    @*<input type="text" class="form-control" id="price" name="price" placeholder="Price/Qty" required>*@

                                                    <table class="table ">
                                                        <tr>
                                                            @*class="form-control"*@
                                                            <td><input type="number" class="form-control clstoponemg" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstoptwomg" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstopthreemg" style="width:80px" /></td>
                                                            <td> <input type="number" class="form-control clstopfourmg" style="width:80px" /></td>
                                                        </tr>
                                                        <tr>
                                                            <td><input type="number" class="form-control clstoponeprice" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstoptwoprice" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstopthreeprice" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstopfourprice" style="width:80px" /></td>
                                                        </tr>
                                                        <tr>
                                                            <td><input type="number" class="form-control clstoponesize" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstoptwosize" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstopthreesize" style="width:80px" /></td>
                                                            <td><input type="number" class="form-control clstopfoursize" style="width:80px" /></td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @*<label for="inputPassword3" class="col-sm-2 control-label" style="padding: 7px 0;">Lead Time : </label>*@
                                                <div class="col-sm-6s">
                                                    <input type="text" style="width: 50%; float: left;" class="form-control" id="leadtime" name="leadtime" placeholder="Lead Time">
                                                </div>
                                                <div class="col-sm-6s">
                                                    <input type="text" style="width: 48%; float: left; margin-left: 5px;" class="form-control" id="productremark" name="productremark" placeholder="Product Remark">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <img id="detFromDBImage" src="" width="100%" style="border:1px solid #ececec" /> <br />
                                            <span id="txtmolweight"></span>
                                            <span id="txtmolformula" style="float: right;"></span>
                                            <div class="clearfix"></div>
                                            <span id="txtmessagenote"></span>
                                        </div>
                                        <div class="clearfix"></div>
                                        <div class="form-group">
                                            @*<label for="inputPassword3" class="col-sm-2 control-label" style="padding: 7px 0;">Remark : </label>*@
                                            <div class="col-sm-12s">
                                                <span id="txtchemicalname"></span> <br />
                                                <span id="txtsynonym"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-4" style="overflow:auto;height:180px;padding-left:0px">
                                            <div>
                                                <table id="batchTbl" style="width:100%; margin-left:0px">
                                                    <thead>
                                                        <tr>
                                                            <th>Batch No</th>
                                                            <th>Qty</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="detFromBatchDetails"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-md-4" style="overflow:auto;height:180px;">
                                            <div>
                                                <table id="priceTbl" style="width:100%">
                                                    <thead>
                                                        <tr>
                                                            <th>Pack Size</th>
                                                            <th>Price</th>
                                                            <th>Lead Time</th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="bodypriceTbl"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div style="text-align:right">
                                                <button type="button" class="btn btn-primary" onclick="Quote.findPrice()"><i class="fa fa-refresh"></i></button>
                                                <button type="button" class="btn btn-primary" onclick="Quote.addFromDBProduct()">Add Product</button>
                                            </div>
                                        </div>
                                        <div class="col-md-12" style="padding-left: 0;padding-top: 10px;">
                                            <div class="" style="padding-left:0px;">
                                                <b>Market Scenario</b>
                                            </div>
                                            <div class="col-md-5" style="padding-left:0px;">
                                                <div id="dbquotereceived"></div>
                                            </div>
                                            <div class="col-md-7" style="padding-left: 0px;padding-right:0;">
                                                <div id="dbothersupplierdata"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div style="float:right">
                                    </div>
                                </div>
                            </div>
                            <div style="display:none" id="dvNewProduct">
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Product Name</label>
                                    <input type="text" class="form-control" id="detNewProductName" name="detNewProductName" placeholder="Product Name">
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputPassword1">CAS No</label>
                                    <input type="text" class="form-control" id="detNewCasno" name="detNewCasno" placeholder="CAS No">
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Upload Image(Optional)</label>
                                    <input type="file" class="form-control" id="detNewFile" name="detNewFile" placeholder="Product Name">
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Price/Qty</label>
                                    <input type="text" class="form-control" id="dtNewprice" name="dtNewprice" placeholder="Price/Qty" required>
                                </div>
                                <div class="form-group">
                                    <label for="exampleInputPassword1">Lead Time</label>
                                    <input type="text" class="form-control" id="detNewleadtime" name="detNewleadtime" placeholder="Lead Time">
                                </div>
                                <div class="form-group">
                                    <label for="inputPassword3">Product Remark : </label>
                                    <input type="text" class="form-control" id="detNewproductremark" name="detNewproductremark" placeholder="Product Remark">
                                </div>
                                <div class="box-body">
                                    <img id="detFromDBImage" src="" width="100%" style="border:1px solid #ececec" />
                                    <div class="form-group">
                                        <label for="inputPassword3" class="col-sm-7 control-label"></label>
                                        <div class="col-sm-2">
                                            <button type="button" class="btn btn-primary" onclick="Quote.addNewProduct()">Add Product</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (listofquotepdfs != null && listofquotepdfs.Count > 0)
        {
            <div class="col-md-12">
                <div class="box box-primary collapsed-box" id="step1">
                    <div class="box-header with-border">
                        <h3 class="box-title">Previous Quotation PDF</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <div class="box-body">
                        @foreach (var item in listofquotepdfs.OrderByDescending(x => x.CreatedDate))
                        {
                            if (item.QuotePDF.Contains("s3"))
                            {
                                <div class="col-md-1" style="text-align:center">
                                    <a href="@item.QuotePDF" target="_blank"><i class="fa fa-file-pdf-o"></i> <br /> @item.CreatedDate.ToShortDateString()</a>
                                </div>
                            }
                            else
                            {
                                int index = item.QuotePDF.ToLower().IndexOf("content");
                                string path = item.QuotePDF.Substring(index, item.QuotePDF.Length - index);
                                <div class="col-md-1" style="text-align:center">
                                    <a href="@Url.Content("~/" + path)" target="_blank"><i class="fa fa-file-pdf-o"></i> <br /> @item.CreatedDate.ToShortDateString()</a>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }

        <div class="col-md-12" id="rightsidediv">
            <!-- general form elements -->
            <div class="box box-primary" id="step1">
                <div class="box-header with-border">
                    <h3 class="box-title">Added Product List</h3>
                    <div class="box-tools pull-right">
                        <select id="ddltype">
                            <option value="INR">INR</option>
                            <option value="USD">USD</option>
                        </select>
                        <input type="number" id="txtbase" style="width: 70px; background: none; border: 1px solid #ececec; font-size: 16px; padding: 0px;" /><span> to </span>
                        <input type="number" id="txtdest" style="width: 70px; background: none; border: 1px solid #ececec; font-size: 16px; padding: 0px;" />
                        <button type="button" class="btn btn-primary" onclick="Quote.saveQuote(true)">PDF </button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <i class="fa fa-arrows-alt" id="divFullscreen"></i>
                    </div>
                </div>
                <div class="clearfix"></div>
                <!-- /.box-header -->
                <!-- form start -->
                <div class="box-body">
                    <form role="form" id="dvTempProductList">
                        <div class="box-body">
                            <div style="text-align: center;color: lightgray;font-size: 36px;">
                                <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </form>
                </div>
            </div>
            <!-- /.box -->
            <!-- general form elements -->
            <div class="box box-primary" id="step2">
                <div class="box-header with-border">
                    <h3 class="box-title">Previous Product List</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-error" onclick="Quote.hideQuoteDetails()">Hide </button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>

                <div class="box-body">
                    <form role="form" id="dvPreviousProductList">
                        <div class="box-body">
                            <div style="text-align: center;color: lightgray;font-size: 36px;">
                                <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- /.box -->

            <div class="box box-primary" id="step3">
                <div class="box-header with-border">
                    <h3 class="box-title">Product List</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <div class="box-body">
                    <form role="form" id="dvFindProductList">
                        <div class="box-body">
                            <div style="text-align: center;color: lightgray;font-size: 36px;">
                                <i class="fa fa-database" style="font-size:120px;"></i> <br />No Products Found!!!
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</section>
<style>
    .attachitems {
        padding: 10px 10px 10px 15px;
        background: #ececec;
        margin: 5px;
        border-radius: 6px;
    }
</style>
<script type="text/javascript">


    var createdDate = '@Model.CreatedDate';

    function RevalidateDay(revalidDate, revalidDay) {
        if (revalidDay === "") {
            toastr.error("Please enter day.");
            $("#txtrevaliddate").val('');
            return false;
        }
        if (revalidDay === undefined) {
            revalidDay = 15;
        }
        revalidDay = parseInt(revalidDay);
        var from = revalidDate.split(" ")[0].split("/");
        var f = new Date(from[2], from[1] - 1, from[0]);
        var t = addDays(f, revalidDay);

        var str = "<div><b>Days: </b><input type='text' id='txtrevaliddate' class='form-control' value='" + revalidDay + "' /> <div>";
        str += "<br /><div><b>Date: </b><label id='txtrevalidatedatestring'>" + GetNow(t) + "</label><div>";
        str += "<br /><div><a href='javascript:void(0)' class='btn btn-primary' onclick='saveRevalidDate()'>Save</a></div>";
        $('#myModal').find('.modal-body').html(str);
        $('#myModal').modal({ show: true });
        $('#myModal').find(".modal-dialog").css("width", "580px");
    }


    function addDays(date, days) {
        var newdate = new Date(date);
        newdate.setDate(newdate.getDate() + days);
        return newdate;
    }

    function GetNow(date) {
        var d = date.getDate();
        var m = date.getMonth();
        m += 1;  // JavaScript months are 0-11
        var y = date.getFullYear();
        return d+"/"+m+"/"+y;
    }

    function saveRevalidDate() {
        $.ajax({
            type: "GET",
            url: '/Form/RevalidateDay?quoteId=@Model.Id&days=' + $("#txtrevaliddate").val(),
            data: {},
            success: function (result) {
                toastr.success('Revalid successfully');
                $('#myModal').modal('hide');
                return false;
            },
            error: function (xhr, status, p3, p4) {

            }
        });
    }

    function calculateDiscount(listPrice, salePrice){
        listPrice = parseFloat(listPrice);
        salePrice = parseFloat(salePrice);
        /*return 100 - (salePrice * 100 / listPrice); // Discount percentage*/
        return round(100 - (salePrice * 100 / listPrice)); // Discount percentage
    }

    $(document).on('keyup', '#txtrevaliddate', function (e) {
        RevalidateDay(createdDate, $(this).val());
    });

    $(document).on('keyup', '.clsfinprice', function (e) {
        var id = $(this).attr('id').replace("finalprice_", "");
        var priceone = $("#price_1_" + id).val();
        var dis = calculateDiscount(priceone, $(this).val());
        if (dis > 0) {
            $("#discount_" + id).val(dis.toFixed(2));
        }
        else {
            $("#discount_" + id).val(0);
        }

        CalculateCommonFinalPrice();
    });

    function CalculateCommonFinalPrice() {
        var finalOne = 0.0;
        $('.clsfinprice').each(function () {
            var id = $(this).attr('id').replace("finalprice_", "");
            var val = $("#finalprice_" + id).val();
            finalOne += parseFloat(val);
        });

        $(".clscommonfinalprice").val(finalOne);
    }

    function stepmove(step) {
        $('html, body').animate({
            scrollTop: $("#" + step).offset().top
        }, 1000);
    }
    function round(value, exp) {
        if (typeof exp === 'undefined' || +exp === 0)
            return Math.round(value);

        value = +value;
        exp = +exp;

        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0))
            return NaN;

        // Shift
        value = value.toString().split('e');
        value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));

        // Shift back
        value = value.toString().split('e');
        return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));
    }
    function removeattachment(filename) {
        $('.attachitems').each(function () {
            if (filename === $(this).attr("data-filename")) {
                $(this).remove();
            }
        });
    }

    $(document).ready(function () {
        $('#QuotePDF').on('change', function (e) {
            var files = e.target.files;
            //var myID = 3; //uncomment this to make sure the ajax URL works
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }

                    $.ajax({
                        type: "POST",
                        url: '/Form/UploadFiles',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            $("#txtquotepdf").val(result);
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });
        $('#txtUploadFile').on('change', function (e) {
            var files = e.target.files;
            //var myID = 3; //uncomment this to make sure the ajax URL works
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }

                    $.ajax({
                        type: "POST",
                        url: '/Form/UploadFiles',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            $("#multiimagediv").append('<div class="attachitems" data-filename="' + result + '"><a href="' + result + '" target="_blank">' + result + '</a><i class="fa fa-remove" style="float: right;color: red;margin-top: 5px;" onclick="removeattachment(\'' + result + '\')"></i></div>');
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });
        $("#divFullscreen").click(function () {
            $("#dvTempProductList").fullscreen();
        });

        $("input[name='productsRadios']").change(function () {
            var value = $(this).val();
            if (value === "new") {
                $("#dvNewProduct").show();
                $(".dvFromDb").hide();
            }
            else {
                $(".dvFromDb").show();
                $("#dvNewProduct").hide();
            }
        });

        //$("#ProductName").autocomplete({
        //    source: function (request, response) {
        //        $.ajax({
        //            url: "/Form/GetProduct",
        //            dataType: "json",
        //            data: {
        //                term: request.term
        //            },
        //            success: function (data) {
        //                var items = [];
        //                $.each(data, function (key, val) {
        //                    var obj = {
        //                        "value": val.Name,
        //                        "id": val.id,
        //                        "label": val.Name,
        //                    };
        //                    items.push(obj);
        //                });
        //                response(items);
        //            }
        //        });
        //    },
        //    minLength: 1,
        //    select: function (event, ui) {
        //    }
        //});

        $(document).on("focus", "#tblalready td", function () {
            $('#tblalready').find('td').removeClass('addcolorbg');
            $('#tblalready').find('tr').removeClass('addcolorgreybg');
            $(this).addClass('addcolorbg');
            $(this).parent('tr').addClass('addcolorgreybg');
        });
        $(document).on("focus", "#tbltempproduct td", function () {
            $('#tbltempproduct').find('td').removeClass('addcolorbg');
            $('#tbltempproduct').find('tr').removeClass('addcolorgreybg');
            $(this).addClass('addcolorbg');
            $(this).parent('tr').addClass('addcolorgreybg');
        });
    });
    //$('#txtemailreceiveddate').datetimepicker({ format: 'DD/MM/YYYY HH:mm:ss' });

</script>
<style>
    .addcolorbg {
        background: #72a4c1;
    }

    .addcolorgreybg {
        background: lightgrey !important;
    }

        .addcolorgreybg a {
            color: #fff;
        }

    .addcolorbg a {
        color: #fff;
    }

    .clsIsControlledSubstance {
        color: red;
    }
</style>
@if (Model.Id > 0)
{
    <text>
        <script type="text/javascript">
            $(document).ready(function () {
                $("#QuoteId").val('@Model.Id');
                $("#CompanyName").val('@Model.CompanyName');
                $("#Email").val('@Model.EmailAddress');
                if ('@Model.ClientRef' != '')
                {
                    @*$("#ClientRef").val(decodeURI('@Model.ClientRef').toString().replace(/&amp;/g, '&'));*@
                    $("#ClientRef").val('@Model.ClientRef'.toString().replace(/&amp;/g, '&'));
                }
                $("#PONumber").val('@Model.PONo');
                $("#EmailCC").val('@Model.EmailCC');
                $("#quotecomment").val($("#txtquotecomm").val());
                $("#externalcomment").val($("#txtexternalcomment").val());

                if ('@Model.IsImageAttach') {
                    $('#IsImageAttach').attr('checked',true);
                }
                if ('@Model.IsFollowupRequired' !== "False") {
                    $('#IsFollowupRequired').attr('checked',true);
                }
                if ('@Model.IsRegret' !== "" && '@Model.IsRegret' !== "False") {
                    $('#IsRegret').attr('checked',true);
                }
                if ('@Model.IsStudy' !== "" && '@Model.IsStudy' !== "False") {
                    $('#IsStudy').attr('checked',true);
                }
                if ('@Model.IsToBe' !== "" && '@Model.IsToBe' != 'False') {
                    $('#IsToBe').attr('checked',true);
                }
                if ('@Model.IsQuoteApproved' !== "" && '@Model.IsQuoteApproved' != 'False') {
                    $('#IsQuoteApproved').attr('checked',true);
                }
                if ('@Model.Auction' != '' && '@Model.Auction' != 'False') {
                    $('#Auction').attr('checked',true);
                }
                if ('@Model.IsCOA' != '' && '@Model.IsCOA' != 'False') {
                    $('#IsCOA').attr('checked', true);
                }
                else {
                    $('#IsCOA').attr('checked', false);
                }
                $("#TermsId").val('@Model.TermsId');
                $("#Remarks").val('@Model.Remark');
                if ('@Model.IsUnderCorrection' !== "" && '@Model.IsUnderCorrection' != 'False') {
                    $('#IsUnderCorrection').attr('checked',true);
                }
                if('@Model.CountryType' != null && '@Model.CountryType' != "")
                {
                     $("input[name=CountryType][value=" + '@Model.CountryType' + "]").prop('checked', true);
                }
                if('@Model.UserDistType' != null && '@Model.UserDistType' != "")
                {
                    $("input[name=UserDistType][value=" + '@Model.UserDistType' + "]").prop('checked', true);
                }
                if('@Model.LayoutType' != null && '@Model.LayoutType' != "")
                {
                    $("input[name=LayoutType][value=" + '@Model.LayoutType' + "]").prop('checked', true);
                }

                $("#SuggChemName").val('@Model.SuggChemName');

                if ('@Model.Attachment' != null && '@Model.Attachment' != "")
                    {
                    var str = '@Model.Attachment.Trim()'.split(',');
                    $(str).each(function (i, v) {
                        $("#multiimagediv").append('<div class="attachitems" data-filename="' + v + '"><a href="' + v + '" target="_blank">' + v + '</a><i class="fa fa-remove" style="float: right;color: red;margin-top: 5px;" onclick="removeattachment(\'' + v + '\')"></i></div>');
                        });
                    }

                    if ('@Model.IsInstock' !== "" && '@Model.IsInstock' != 'False') {
                    $('#IsInstock').attr('checked',true);
                    }
                    if ('@Model.IsCustomSynthesis' !== "" && '@Model.IsCustomSynthesis' != 'False') {
                    $('#IsCustomSynthesis').attr('checked',true);
                    }

                    if ('@Model.IsPreviewed' !== "" && '@Model.IsPreviewed' != 'False') {
                    $('#IsPreviewed').attr('checked',true);
                    }

                    if ('@Model.IsShippedCharge' !== "" && '@Model.IsShippedCharge' != 'False') {
                    $('#IsShippedCharge').attr('checked',true);
                    }

                    if ('@Model.IsShowDashboard' !== "" && '@Model.IsShowDashboard' != 'False') {
                    $('#IsShowDashboard').attr('checked',true);
                    }

                    if ('@Model.IsAnalyticalData' !== "" && '@Model.IsAnalyticalData' != 'False') {
                        $('#IsAnalyticalData').attr('checked',true);
                    }
                    if ('@Model.IsPreApproved' !== "" && '@Model.IsPreApproved' != 'False') {
                        $('#IsPreApproved').attr('checked',true);
                    }
                    if ('@Model.IsRevision' !== "" && '@Model.IsRevision' != 'False') {
                        $('#IsRevision').attr('checked',true);
                    }
                    if ('@Model.IsCustomPDFLayout' !== "" && '@Model.IsCustomPDFLayout' != 'False') {
                        $('#IsCustomPDFLayout').attr('checked',true);
                    }
                    if ('@Model.IsInstock' !== "" && '@Model.IsInstock' != 'False') {
                    $('#IsInstock').attr('checked',true);
                    }

                    if ('@Model.PaymentTerm' !== '') {
                    $("#PaymentTerm").val('@Model.PaymentTerm');
                }
                if ('@Model.DocumentTypeId' !== '') {
                    $("#DocumentTypeId").val('@Model.DocumentTypeId');
                    }

                    if ('@Model.QuotePDF' != '') {
                    $("#txtquotepdf").val('@Model.QuotePDF');
                    }

                    var dateValue = $("#PODate").attr('data-value');
                    if (dateValue !== '') {
                        dateValue = dateValue.toString().replace(' 00:00:00', '');
                        $("#PODate").datepicker("setDate", dateValue);
                    }

                    //var dateValue1 = $("#txtemailreceiveddate").attr('data-value');
                    //if (dateValue1 !== '') {
                    //    $('#txtemailreceiveddate').data("DateTimePicker").date(dateValue1)
                    //}

                    // Load all product of quotation
                    Quote.getProductListForQuote('@Model.Id');

                    GetAllEmailByCompanyId('@Model.CompanyId')

            });
        </script>
    </text>
}
else
{
    <script>
        $("#rightsidediv").hide();
        $("#rightsidedivcolmd6").hide();
        $("#rightsidediv *").attr("disabled", "disabled").off('click');
        $("#rightsidedivcolmd6 *").attr("disabled", "disabled").off('click');
        $("#btnmail").hide();
        $("#btnpdf").hide();
        $('#IsCOA').attr('checked', true);
        $('#IsImageAttach').attr('checked', true);
        $('#IsAnalyticalData').attr('checked', true);
        $('#txtemailreceiveddate').data("DateTimePicker").date(new Date());
    </script>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('input[name=productsRadios]').each(function () {
            var value = $(this).val();
            if (value === "db") {
                $(this).click();
            }
        });

        var dateValue = $("#PODate").attr('data-value');
        if (dateValue !== '') {
            dateValue = dateValue.toString().replace(' 00:00:00', '');
            $("#PODate").datepicker("setDate", dateValue);
        }

        //var dateValue1 = $("#txtemailreceiveddate").attr('data-value');
        //if (dateValue1 !== '') {
        //    dateValue1 = dateValue1.toString().replace(' 00:00:00', '');
        //    $("#txtemailreceiveddate").datetimepicker("setDate", dateValue1);
        //}

    });
</script>
<style type="text/css">
    .autocomplete {
        /*the container must be positioned relative:*/
        position: relative;
        display: inline-block;
    }

    input {
        border: 1px solid transparent;
        background-color: #f1f1f1;
        padding: 10px;
        font-size: 16px;
    }

        input[type=text], input[type=number] {
            background-color: #f1f1f1;
            width: 100%;
        }

        input[type=submit] {
            background-color: DodgerBlue;
            color: #fff;
        }

    .autocomplete-items {
        position: relative;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            .autocomplete-items div:hover {
                /*when hovering an item:*/
                background-color: #e9e9e9;
            }

    .autocomplete-active {
        /*when navigating through the items using the arrow keys:*/
        background-color: DodgerBlue !important;
        color: #ffffff;
    }
</style>

@if (ViewBag.IsClubQuote)
{
    <text>
        <script type="text/javascript">
            $(document).ready(function () {
                Quote.tempProductListForQuote();
            });
        </script>
    </text>
}

<script type="text/javascript">
    $('.clsCountryType').change(function () {
        if ($(this).val() === "Domestic") {
            $("#Currency").val('INR');
            $("#TermsId").val('3');
        }
        else {
            $("#Currency").val('USD');
            $("#TermsId").val('2');
        }
    });

    $('#PODate').datepicker({
        format: 'dd/mm/yyyy',
        onSelect: function (dateText, inst) {

        }
    })

    function autocomplete(inp, arr) {
        /*the autocomplete function takes two arguments,
        the text field element and an array of possible autocompleted values:*/
        var currentFocus;
        /*execute a function when someone writes in the text field:*/
        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {

                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;

                        /*GetCompanyDetailsFromEmail(inp.value);*/

                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });
        /*execute a function presses a key on the keyboard:*/
        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
                /*If the arrow DOWN key is pressed,
                increase the currentFocus variable:*/
                currentFocus++;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 38) { //up
                /*If the arrow UP key is pressed,
                decrease the currentFocus variable:*/
                currentFocus--;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 13) {
                /*If the ENTER key is pressed, prevent the form from being submitted,*/
                e.preventDefault();
                if (currentFocus > -1) {
                    /*and simulate a click on the "active" item:*/
                    if (x) x[currentFocus].click();
                }
            }
        });
        inp.addEventListener("focus", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            //if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {

                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;
                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
            }
        });
        function addActive(x) {
            /*a function to classify an item as "active":*/
            if (!x) return false;
            /*start by removing the "active" class on all items:*/
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            /*add class "autocomplete-active":*/
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            /*a function to remove the "active" class from all autocomplete items:*/
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            /*close all autocomplete lists in the document,
            except the one passed as an argument:*/
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }

        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }

    // autocomplete(document.getElementById("PONumber"), countries);

    $("#CompanyId").change(function () {

        GetAllEmailByCompanyId($(this).val());
        Quote.getCompInformation($(this).val());
    });


    $("#CompanyId option").each(function () {
        var text = $(this).text();
        if (text.indexOf("True") !== -1) {
            $(this).attr('class', 'red');
        }
        $(this).text($(this).text().replace("True", "").replace("False", ""))
    });

    GetAllEmail();
    function GetAllEmail() {
        $.ajax({
            url: "/Form/GetAllEmail",
            dataType: "json",
            data: {},
            success: function (data) {
                autocomplete(document.getElementById("Email"), data);
            }
        });
    }

    $(document).on('keyup', '.clsalreadyprice', function (event) {
        var db = [];
        $(".clsalreadyprice").each(function () {
            if ($(this).val() !== "" && (db.indexOf($(this).val()) === -1)) {
                db.push($(this).val());
            }
        });

        var id = $(this).attr('id');
        autocomplete(document.getElementById(id), db);
    });


    function GetAllEmailByCompanyId(compId) {
        $.ajax({
            url: "/Form/GetAllEmailByCompanyId",
            dataType: "json",
            data: {
                compId: compId
            },
            success: function (data) {
                autocomplete(document.getElementById("Email"), data);
            }
        });
    }

    function GetCompanyDetailsFromEmail(email) {
        $.ajax({
            url: "/Form/GetCompanyDetailsFromEmail",
            dataType: "json",
            data: {
                email: email
            },
            success: function (data) {
                if (data.length > 0) {
                    $("#CompanyId").val(data[0]);
                    GetAllEmailByCompanyId(data[0]);
                    Quote.getCompInformation(data[0]);
                }
            }
        });
    }

    function expandCollapse(expand) {
        if (expand) {
            $('#leftsidediv').css('display', 'none');
            $('#rightsidediv').addClass('col-md-12');
            $('#rightsidediv').removeClass('col-md-9');
            $('#expandicon').css('display', 'block');
        }
        else {
            $('#leftsidediv').css('display', 'block');
            $('#rightsidediv').addClass('col-md-9');
            $('#rightsidediv').removeClass('col-md-12');
            $('#expandicon').css('display', 'none');
        }
    }
    function editallalreadyProduct() {
        $('#tblalready > tbody').find('tr').each(function () {
            $(this).find('label').hide();
            $(this).find('input').show();
        });

        $('#tblalready > tbody').find('.clshistory').each(function () {
            $(this).find('label').hide();
            $(this).find('input').show();
        });
    }

    function addcompanypopup() {
        $.ajax({
            url: '/Form/AddNewCompanyPopup',
            data: {},
            type: 'GET',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                $('#myModal').find('.modal-body').html(data.html);
                $('#myModal').modal({ show: true });
                $('#myModal').find(".modal-dialog").css("width", "1080px");
                $('#myModal').find('.modal-body').find(".box-body").css('overflow', 'scroll').css('height', '400px');
                $("#tblrfqcompselection").DataTable();
            }
        });
    }

    function deleteallalreadyProduct() {
        var count = 1;
        var forloopcnt = 0;
        $('.delclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        if (forloopcnt === 0) {
            toastr.error("Please select product");
            return false;
        }

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this product!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {

                    $('.delclass').each(function () {
                        if ($(this).is(":checked")) {
                            var quoteId = $("#QuoteId").val();
                            var id = $(this).val();
                            var obj = {
                                id: id
                            };
                            if (id != undefined) {

                                $.ajax({
                                    url: "/Form/DeleteProductFromQuoteDetails?id=" + id,
                                    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                                    data: JSON.stringify({ model: obj }),
                                    type: 'POST',
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        if (data.success) {
                                            //  Quote.getProductListForQuote(quoteId);
                                            //window.location.href = "/Form/Quotation/" + quoteId;
                                        }
                                    },
                                    complete: function (data) {
                                        successAlert(count, forloopcnt, quoteId);
                                        count += 1;
                                    }
                                });
                            }
                        }
                    });



                } else {
                    toastr.error("Your added product is safe :)");
                }
            });
    }

    function deletetempalreadyProduct() {
        var count = 1;
        var forloopcnt = 0;
        $('.deltempclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        if (forloopcnt === 0) {
            toastr.error("Please select product");
            return false;
        }

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this product!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    var isCulbQuotation = $("#isClubQuote").val();
                    $('.deltempclass').each(function () {
                        if ($(this).is(":checked")) {
                            var quoteId = $("#QuoteId").val();
                            var id = $(this).val();
                            var obj = {
                                id: id
                            };
                            if (id != undefined) {

                                $.ajax({
                                    url: "/Form/DeleteTempProduct?id=" + id + "&isClubQuote=" + isCulbQuotation,
                                    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                                    data: JSON.stringify({ model: obj }),
                                    type: 'POST',
                                    contentType: "application/json; charset=utf-8",
                                    success: function (data) {
                                        if (data.success) {
                                            //  Quote.getProductListForQuote(quoteId);
                                            //window.location.href = "/Form/Quotation/" + quoteId;
                                        }
                                    },
                                    complete: function (data) {
                                        successTempAlert(count, forloopcnt, quoteId);
                                        count += 1;
                                    }
                                });
                            }
                        }
                    });



                } else {
                    toastr.error("Your added product is safe :)");
                }
            });
    }

    function synthesisProduct(isPurchase) {

        var count = 1;
        var forloopcnt = 0;
        $('.synthesislogclass').each(function () {
            if ($(this).is(":checked")) {
                forloopcnt += 1;
            }
        });

        $('.synthesislogclass').each(function () {
            if ($(this).is(":checked")) {
                var quoteId = $("#QuoteId").val();
                var id = $(this).val();
                var obj = {
                    id: id
                };
                if (id != undefined) {

                    $.ajax({
                        url: '/Form/SaveSynthesisLog',
                        //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                        data: JSON.stringify({ model: obj }),
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (data.success) {
                                //  Quote.getProductListForQuote(quoteId);
                                //window.location.href = "/Form/Quotation/" + quoteId;
                            }
                        },
                        complete: function (data) {
                            successAlert(count, forloopcnt, quoteId);
                            count += 1;
                        }
                    });
                }
            }
        });

    }

    var isCOADownloadWithQuote = false;
    function myTrim(x) {
        return x.replace(/^\s+|\s+$/gm, '');
    }

    function saveallalreadyProduct(isCOA) {
        isCOADownloadWithQuote = isCOA;
        var count = 1;
        var forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length);
        if ($("input[name='LayoutType']:checked").val() === "Standard") {
            forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length) - 1;
        }
        var mainModel = [];
        $('#tblalready').find('tr').each(function () {
            var id = $(this).attr("data-id");
            var quoteId = $(this).attr("data-quoteid");
            var productname = $("#productname_" + id).val();
            var price = $("#price_" + id).val();
            var finalprice = $("#finalprice_" + id).val();
            var casno = $("#casno_" + id).val();
            var catno = $("#catno_" + id).val();
            var leadtime = $("#leadtime_" + id).val();
            var displayorder = $("#displayorder_" + id).val();
            var productremark = $("#productremark_" + id).val();
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var synthesislog = $("#synthesislog_" + id).is(':checked');
            var batchno = $("#batchno_" + id).val();
            var isClubQuote = $("#isClubQuote").val();
            var countryType = $("input[name='CountryType']:checked").val();
            var discount = "";
            var currency = "";
            var tracebilityCost = $("#TracebilityCost_" + id).val();
            var coldShipCost = $("#ColdShipCost_" + id).val();
            var addTestCost = $("#AddTestCost_" + id).val();
            var tracebilityCostRemark = $("#TracebilityCostRemark_" + id).val();
            var coldShipCostRemark = $("#ColdShipCostRemark_" + id).val();
            var addTestCostRemark = $("#AddTestCostRemark_" + id).val();
            var technicalEmail = $("#TechnicalEmail_" + id).val();
            var internalComment = $("#InternalComment_" + id).val();
            var iscontrolledsubstancecharge = $("#chkcontrolledsubstance_" + id).is(':checked')
            if (countryType === "Export") {
                currency = "USD";
            }
            else {
                currency = "INR";
            }

            if ($("#Currency").val() !== '' && $("#Currency").val() !== null && $("#Currency").val() !== undefined) {
                currency = $("#Currency").val();
            }

            if ($("input[name='LayoutType']:checked").val() === "Standard") {
                var str = [];
                var mg1 = $("#pricemg_1_" + id).val();
                var mg2 = $("#pricemg_2_" + id).val();
                var mg3 = $("#pricemg_3_" + id).val();
                var mg4 = $("#pricemg_4_" + id).val();
                var mg5 = $("#pricemg_5_" + id).val();
                var ps1 = $("#packsize_1_" + id).val();
                var ps2 = $("#packsize_2_" + id).val();
                var ps3 = $("#packsize_3_" + id).val();
                var ps4 = $("#packsize_4_" + id).val();
                var ps5 = $("#packsize_5_" + id).val();
                if (mg1 !== '' && mg1 !== undefined) {
                    var label = mg1.trim() + ' mg&#64;' + $("#price_1_" + id).val() + ' ' + currency;
                    if (ps1 !== null && ps1 !== undefined && ps1.trim() !== "") {
                        label += ' X ' + ps1 + ' = ' + parseFloat($("#price_1_" + id).val()) * parseFloat(ps1) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg2 !== '' && mg2 !== undefined) {
                    var label = mg2.trim() + ' mg&#64;' + $("#price_2_" + id).val() + ' ' + currency;
                    if (ps2 !== null && ps2 !== undefined && ps2.trim() !== "") {
                        label += ' X ' + ps2 + ' = ' + parseFloat($("#price_2_" + id).val()) * parseFloat(ps2) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg3 !== '' && mg3 !== undefined) {
                    var label = mg3.trim() + ' mg&#64;' + $("#price_3_" + id).val() + ' ' + currency;
                    if (ps3 !== null && ps3 !== undefined && ps3.trim() !== "") {
                        label += ' X ' + ps3 + ' = ' + parseFloat($("#price_3_" + id).val()) * parseFloat(ps3) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg4 !== '' && mg4 !== undefined) {
                    var label = mg4.trim() + ' mg&#64;' + $("#price_4_" + id).val() + ' ' + currency;
                    if (ps4 !== null && ps4 !== undefined && ps4.trim() !== "") {
                        label += ' X ' + ps4 + ' = ' + parseFloat($("#price_4_" + id).val()) * parseFloat(ps4) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg5 !== '' && mg5 !== undefined) {
                    var label = mg5.trim() + ' mg&#64;' + $("#price_5_" + id).val() + ' ' + currency;
                    if (ps5 !== null && ps5 !== undefined && ps5.trim() !== "") {
                        label += ' X ' + ps5 + ' = ' + parseFloat($("#price_5_" + id).val()) * parseFloat(ps5) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (str.length > 0) {
                    price = $.parseHTML(str.join(', '))[0].data;
                }
            }

            if (batchno !== '' && batchno !== undefined && batchno !== 'undefined') {
                batchno = batchno.trim();
            }

            var obj = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                finalprice: finalprice,
                leadtime: leadtime,
                displayOrder: displayorder,
                productremark: productremark,
                estimateDispatchDate: estimateDispatchDate,
                id: id,
                synthesislog: synthesislog,
                actionname: 'partialproductupdate',
                batchno: batchno,
                isClubQuote: isClubQuote,
                discount: $("#discount_" + id).val(),
                tracebilityCost: tracebilityCost,
                coldShipCost: coldShipCost,
                addTestCost: addTestCost,
                tracebilityCostRemark: tracebilityCostRemark,
                coldShipCostRemark: coldShipCostRemark,
                addTestCostRemark: addTestCostRemark,
                technicalEmail: technicalEmail,
                internalComment: internalComment,
                iscontrolledsubstancecharge: iscontrolledsubstancecharge
            };

            mainModel.push(obj);


        });


        if (mainModel.length > 0) {
            $.ajax({
                url: '/Form/UpdateNewProductInfo',
                data: JSON.stringify({ mainmodel: mainModel }),
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                },
                complete: function (data) {
                    toastr.success("Saved successfully");
                    setTimeout(function () {
                        Quote.tempProductListForQuote();
                    }, 1500);
                }
            });
        }
    }

    function OLD_saveallalreadyProduct(isCOA) {
        isCOADownloadWithQuote = isCOA;
        var count = 1;
        var forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length);
        if ($("input[name='LayoutType']:checked").val() === "Standard") {
            forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length) - 1;
        }
        $('#tblalready').find('tr').each(function () {
            var id = $(this).attr("data-id");
            var quoteId = $(this).attr("data-quoteid");
            var productname = $("#productname_" + id).val();
            var price = $("#price_" + id).val();
            var finalprice = $("#finalprice_" + id).val();
            var casno = $("#casno_" + id).val();
            var catno = $("#catno_" + id).val();
            var leadtime = $("#leadtime_" + id).val();
            var displayorder = $("#displayorder_" + id).val();
            var productremark = $("#productremark_" + id).val();
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var synthesislog = $("#synthesislog_" + id).is(':checked');
            var batchno = $("#batchno_" + id).val();
            var isClubQuote = $("#isClubQuote").val();
            var countryType = $("input[name='CountryType']:checked").val();
            var discount = "";
            var currency = "";
            var tracebilityCost = $("#TracebilityCost_" + id).val();
            var coldShipCost = $("#ColdShipCost_" + id).val();
            var addTestCost = $("#AddTestCost_" + id).val();
            var tracebilityCostRemark = $("#TracebilityCostRemark_" + id).val();
            var coldShipCostRemark = $("#ColdShipCostRemark_" + id).val();
            var addTestCostRemark = $("#AddTestCostRemark_" + id).val();
            var technicalEmail = $("#TechnicalEmail_" + id).val();
            var internalComment = $("#InternalComment_" + id).val();
            if (countryType === "Export") {
                currency = "USD";
            }
            else {
                currency = "INR";
            }

            if ($("#Currency").val() !== '' && $("#Currency").val() !== null && $("#Currency").val() !== undefined) {
                currency = $("#Currency").val();
            }

            if ($("input[name='LayoutType']:checked").val() === "Standard") {
                var str = [];
                var mg1 = $("#pricemg_1_" + id).val();
                var mg2 = $("#pricemg_2_" + id).val();
                var mg3 = $("#pricemg_3_" + id).val();
                var mg4 = $("#pricemg_4_" + id).val();
                var mg5 = $("#pricemg_5_" + id).val();
                var ps1 = $("#packsize_1_" + id).val();
                var ps2 = $("#packsize_2_" + id).val();
                var ps3 = $("#packsize_3_" + id).val();
                var ps4 = $("#packsize_4_" + id).val();
                var ps5 = $("#packsize_5_" + id).val();
                if (mg1 !== '' && mg1 !== undefined) {
                    var label = mg1.trim() + ' mg&#64;' + $("#price_1_" + id).val() + ' ' + currency;
                    if (ps1 !== null && ps1 !== undefined && ps1.trim() !== "") {
                        label += ' X ' + ps1 + ' = ' + parseFloat($("#price_1_" + id).val()) * parseFloat(ps1) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg2 !== '' && mg2 !== undefined) {
                    var label = mg2.trim() + ' mg&#64;' + $("#price_2_" + id).val() + ' ' + currency;
                    if (ps2 !== null && ps2 !== undefined && ps2.trim() !== "") {
                        label += ' X ' + ps2 + ' = ' + parseFloat($("#price_2_" + id).val()) * parseFloat(ps2) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg3 !== '' && mg3 !== undefined) {
                    var label = mg3.trim() + ' mg&#64;' + $("#price_3_" + id).val() + ' ' + currency;
                    if (ps3 !== null && ps3 !== undefined && ps3.trim() !== "") {
                        label += ' X ' + ps3 + ' = ' + parseFloat($("#price_3_" + id).val()) * parseFloat(ps3) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg4 !== '' && mg4 !== undefined) {
                    var label = mg4.trim() + ' mg&#64;' + $("#price_4_" + id).val() + ' ' + currency;
                    if (ps4 !== null && ps4 !== undefined && ps4.trim() !== "") {
                        label += ' X ' + ps4 + ' = ' + parseFloat($("#price_4_" + id).val()) * parseFloat(ps4) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg5 !== '' && mg5 !== undefined) {
                    var label = mg5.trim() + ' mg&#64;' + $("#price_5_" + id).val() + ' ' + currency;
                    if (ps5 !== null && ps5 !== undefined && ps5.trim() !== "") {
                        label += ' X ' + ps5 + ' = ' + parseFloat($("#price_5_" + id).val()) * parseFloat(ps5) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (str.length > 0) {
                    price = $.parseHTML(str.join(', '))[0].data;
                }
            }

            if (batchno !== '' && batchno !== undefined && batchno !== 'undefined') {
                batchno = batchno.trim();
            }

            var obj = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                finalprice: finalprice,
                leadtime: leadtime,
                displayOrder: displayorder,
                productremark: productremark,
                estimateDispatchDate: estimateDispatchDate,
                id: id,
                synthesislog: synthesislog,
                actionname: 'partialproductupdate',
                batchno: batchno,
                isClubQuote: isClubQuote,
                discount: $("#discount_" + id).val(),
                tracebilityCost: tracebilityCost,
                coldShipCost: coldShipCost,
                addTestCost: addTestCost,
                tracebilityCostRemark: tracebilityCostRemark,
                coldShipCostRemark: coldShipCostRemark,
                addTestCostRemark: addTestCostRemark,
                technicalEmail: technicalEmail,
                internalComment: internalComment
            };

            if (id != undefined) {
                $.ajax({
                    url: '/Form/UpdateProductInfo',
                    data: JSON.stringify({ model: obj }),
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                    },
                    complete: function (data) {
                        successAlert(count, forloopcnt, quoteId);
                        count += 1;
                    }
                });
            }
        });

    }

    function saveallalreadyProductAndCheck(isCOA) {
        isCOADownloadWithQuote = isCOA;
        var paramData = [];
        var count = 1;
        var forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length);
        if ($("input[name='LayoutType']:checked").val() === "Standard") {
            forloopcnt = parseInt($('#tblalready').find('tbody').find('tr').length) - 1;
        }
        $('#tblalready').find('tr').each(function () {
            var id = $(this).attr("data-id");
            var quoteId = $(this).attr("data-quoteid");
            var productname = $("#productname_" + id).val();
            var price = $("#price_" + id).val();
            var finalprice = $("#finalprice_" + id).val();
            var casno = $("#casno_" + id).val();
            var catno = $("#catno_" + id).val();
            var leadtime = $("#leadtime_" + id).val();
            var displayorder = $("#displayorder_" + id).val();
            var productremark = $("#productremark_" + id).val();
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var synthesislog = $("#synthesislog_" + id).is(':checked');
            var batchno = $("#batchno_" + id).val();
            var isClubQuote = $("#isClubQuote").val();
            var countryType = $("input[name='CountryType']:checked").val();
            var discount = "";
            var currency = "";
            if (countryType === "Export") {
                currency = "USD";
            }
            else {
                currency = "INR";
            }

            if ($("input[name='LayoutType']:checked").val() === "Standard") {
                var str = [];
                var mg1 = $("#pricemg_1_" + id).val();
                var mg2 = $("#pricemg_2_" + id).val();
                var mg3 = $("#pricemg_3_" + id).val();
                var mg4 = $("#pricemg_4_" + id).val();
                var mg5 = $("#pricemg_5_" + id).val();
                var ps1 = $("#packsize_1_" + id).val();
                var ps2 = $("#packsize_2_" + id).val();
                var ps3 = $("#packsize_3_" + id).val();
                var ps4 = $("#packsize_4_" + id).val();
                var ps5 = $("#packsize_5_" + id).val();
                if (mg1 !== '' && mg1 !== undefined) {
                    var label = mg1.trim() + ' mg&#64;' + $("#price_1_" + id).val() + ' ' + currency;
                    if (ps1 !== null && ps1 !== undefined && ps1.trim() !== "") {
                        label += ' X ' + ps1 + ' = ' + parseFloat($("#price_1_" + id).val()) * parseFloat(ps1) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg2 !== '' && mg2 !== undefined) {
                    var label = mg2.trim() + ' mg&#64;' + $("#price_2_" + id).val() + ' ' + currency;
                    if (ps2 !== null && ps2 !== undefined && ps2.trim() !== "") {
                        label += ' X ' + ps2 + ' = ' + parseFloat($("#price_2_" + id).val()) * parseFloat(ps2) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg3 !== '' && mg3 !== undefined) {
                    var label = mg3.trim() + ' mg&#64;' + $("#price_3_" + id).val() + ' ' + currency;
                    if (ps3 !== null && ps3 !== undefined && ps3.trim() !== "") {
                        label += ' X ' + ps3 + ' = ' + parseFloat($("#price_3_" + id).val()) * parseFloat(ps3) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg4 !== '' && mg4 !== undefined) {
                    var label = mg4.trim() + ' mg&#64;' + $("#price_4_" + id).val() + ' ' + currency;
                    if (ps4 !== null && ps4 !== undefined && ps4.trim() !== "") {
                        label += ' X ' + ps4 + ' = ' + parseFloat($("#price_4_" + id).val()) * parseFloat(ps4) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (mg5 !== '' && mg5 !== undefined) {
                    var label = mg5.trim() + ' mg&#64;' + $("#price_5_" + id).val() + ' ' + currency;
                    if (ps5 !== null && ps5 !== undefined && ps5.trim() !== "") {
                        label += ' X ' + ps5 + ' = ' + parseFloat($("#price_5_" + id).val()) * parseFloat(ps5) + ' ' + currency;
                    }
                    str.push(label);
                }
                if (str.length > 0) {
                    price = $.parseHTML(str.join(', '))[0].data;
                }
            }

            if (batchno !== '' && batchno !== undefined && batchno !== 'undefined') {
                batchno = batchno.trim();
            }

            var obj = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                finalprice: finalprice,
                leadtime: leadtime,
                displayOrder: displayorder,
                productremark: productremark,
                estimateDispatchDate: estimateDispatchDate,
                id: id,
                synthesislog: synthesislog,
                actionname: 'partialproductupdate',
                batchno: batchno,
                isClubQuote: isClubQuote,
                discount: $("#discount_" + id).val()
            };

            if (id != undefined) {
                paramData.push(obj);
                //$.ajax({
                //    url: '/Form/UpdateProductInfo',
                //    //url: '/Form/UpdateProductInfo?ProductName=' + productname + '&casno=' + casno + '&catNo=' + catno + '&price=' + price.toString() + '&leadtime=' + leadtime + '&id=' + id,
                //    data: JSON.stringify({ model: obj }),
                //    type: 'POST',
                //    contentType: "application/json; charset=utf-8",
                //    success: function (data) {
                //        if (data.success) {
                //            //  Quote.getProductListForQuote(quoteId);
                //            //window.location.href = "/Form/Quotation/" + quoteId;
                //        }
                //    },
                //    complete: function (data) {
                //        successAlert(count, forloopcnt, quoteId);
                //        count += 1;
                //    }
                //});
            }
        });
        var quoteId = $('#tblalready').find('tr').attr("data-quoteid");
        $.ajax({
            url: '/Form/UpdateProductInfoAndCheck',
            data: JSON.stringify({ modelss: paramData, compId: $("#CompanyId").val()}),
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.success) {
                    $('.modal-body').html(data.html);
                    $('#myModal').modal({ show: true });
                    $(".modal-dialog").css("width", "1080px");

                    $('#myModal').find(".modal-footer").hide();
                }
            },
            complete: function (data) {
                successAlert(count, forloopcnt, quoteId);
                count += 1;
            }
        });
    }

    function discountrecord(tablename) {
        var ids = [];
        $("#" + tablename).find('.delclass').each(function () {
            if ($(this).is(':checked')) {
                ids.push($(this).val());
            }
        });

        if (ids.length === 0) {
            toastr.error("Please select atleast one Product");
            return false;
        }

        $.ajax({
            url: '/Form/PrintQuotationListAllRecordWithDiscount',
            data: { id: ids },
            type: 'POST',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                $('.modal-body').html(data.html);
                $('#myModal').modal({ show: true });
                $(".modal-dialog").css("width", "1080px");

                $('#myModal').find(".modal-footer").hide();
            }
        });
    }

    function Copyrecords(tablename) {
        var ids = [];
        $("#" + tablename).find('.delclass').each(function () {
            if ($(this).is(':checked')) {
                ids.push($(this).val());

            }
        });

        if (ids.length === 0) {
            toastr.error("Please select atleast one Product");
            return false;
        }

        $.ajax({
            url: '/Form/PrintQuotationListAllRecord?pagename=quotedetails',
            data: { id: ids },
            type: 'POST',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                $('.modal-body').html(data.html);
                $('#myModal').modal({ show: true });
                $(".modal-dialog").css("width", "1080px");

                $('#myModal').find(".modal-footer").hide();
            }
        });
    }

    function editTempPartialProductDetails() {
        $('#tbltempproduct  > tbody').find('tr').each(function () {
            $(this).find('label').hide();
            $(this).find('input').show();
        });
    }

    function SaveallTempPartialProductDetails() {

        var count = 1;
        var forloopcnt = $('#tbltempproduct > tbody').find('tr').length;
        $('#tbltempproduct  > tbody').find('tr').each(function () {

            var id = $(this).attr("data-id");
            var quoteId = $("#QuoteId").val();
            var productname = $("#productnametemp_" + id).val();
            var price = $("#pricetemp_" + id).val();
            var finalprice = $("#finalpricetemp_" + id).val();
            var casno = $("#casnotemp_" + id).val();
            var catno = $("#catnotemp_" + id).val();
            var leadtime = $("#leadtimetemp_" + id).val();
            var proRemark = $("#productremark_" + id).val();
            var synthesislogtemp = $("#synthesislogtemp_" + id).is(':checked');
            var estimateDispatchDate = $("#estimateDispatchDate_" + id).val();
            var model = {
                ProductName: productname,
                casno: casno,
                catNo: catno,
                price: price,
                finalprice: finalprice,
                leadtime: leadtime,
                productremark: proRemark,
                id: id,
                estimateDispatchDate: estimateDispatchDate,
                synthesislog: synthesislogtemp
            };
            $.ajax({
                url: '/Form/UpdateTempProductInfo',
                data: model,
                type: 'POST',
                success: function (data) {
                    if (data.success) {
                        //  Quote.tempProductListForQuote();
                    }
                },
                complete: function (data) {
                    successTempAlert(count, forloopcnt, quoteId);
                    count += 1;
                }
            });
        })
    }

    function successTempAlert(count, forloopcount, quoteId) {
        if (count === forloopcount) {

            Quote.tempProductListForQuote();

        }
    }

    function successAlert(count, forloopcount, quoteId) {
        if (count === forloopcount) {
            toastr.success("Saved successfully");
            if (!isCOADownloadWithQuote) {
                //Quote.getProductListForQuote(quoteId);
            }
            setTimeout(function () {
                Quote.tempProductListForQuote();
            }, 1500);
        }
    }

    function showpopupInfo(id, quotedetailsId) {
        $.ajax({
            url: '/Form/showpopupInfo?id=' + id + '&quoteDetailsId=' + quotedetailsId,
            data: {},
            type: 'GET',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-dialog').css('width', '1100px');
                $('#invoiceQueryModal .modal-content').css('width', '1100px');
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }

    function AllQuotePrice(id) {
        $.ajax({
            url: '/Form/AllQuotePrice?id=' + id,
            data: {},
            type: 'GET',
            traditional: true,
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }


    function GetAllBatchNo(id) {
        $.ajax({
            url: '/Form/GetAllBatchNo?id=' + id + '&actiontxt=quote',
            data: {},
            type: 'GET',
            traditional: true,
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }

    function GetAuditLogForQuote(id) {
        $.ajax({
            url: '/Form/GetAuditLogForQuote?id=' + id,
            data: {},
            type: 'GET',
            traditional: true,
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }

    function GetAuditLogForQuoteDetail(id) {
        $.ajax({
            url: '/Form/GetAuditLogForQuoteDetail?id=' + id,
            data: {},
            type: 'GET',
            traditional: true,
            dataType: 'json',
            success: function (data) {
                $('#invoiceQueryModal .modal-body').html(data.html);
                $('#invoiceQueryModal').modal({ show: true });
            }
        });
    }

    $("#IsInstock").change(function () {
        if ($(this).is(':checked')) {
            $("#IsCustomSynthesis").prop('checked', false);
        }
    });
    $("#IsCustomSynthesis").change(function () {
        if ($(this).is(':checked')) {
            $("#IsInstock").prop('checked', false);
        }
    });

    $('input[type=radio][name=LayoutType]').change(function () {
        Quote.getProductListForQuote($("#QuoteId").val())
    });

    //
    $(document).on("keyup", ".clstblleadtime", function () {
        refreshHighlighted();
    });

    $(document).on("keyup", ".clspriceonepack", function () {
        SteponePrice();
    });
    $(document).on("keyup", ".clspriceone", function () {
        SteponePrice();
    });

    $(document).on("keyup", "#commondis", function () {
        var comdis = $(this).val();
        $(".clsdiscount").each(function () {
            $(this).val(comdis);
            var id = $(this).attr('id').replace('discount_', '');
            var price = parseInt($("#price_1_" + id).val());
            $("#finalprice_" + id).val(parseFloat(price - ((comdis / 100) * price)).toFixed(2));
        });

        CalculateCommonFinalPrice();
    });

    $(document).on("keyup", ".clsdiscount", function () {
        var comdis = $(this).val();
            var id = $(this).attr('id').replace('discount_', '');
            var price = parseInt($("#price_1_" + id).val());
        $("#finalprice_" + id).val(parseFloat(price - ((comdis / 100) * price)).toFixed(2));
        CalculateCommonFinalPrice();
    }); 

    $(document).on("keyup", "#commonfinpri", function () {
        var commonfinpri = parseInt($(this).val());
        var numVal2 = parseInt($("#clspriceonetext").text());
        var commondis = (100 - ((commonfinpri / numVal2) * 100)).toFixed(2);
        var comdis = commondis;
        $("#commondis").val(comdis);
        $(".clsdiscount").each(function () {
            $(this).val(comdis);
            var id = $(this).attr('id').replace('discount_','');
            var price = parseInt($("#price_1_" + id).val());
            $("#finalprice_" + id).val(parseFloat(price - ((comdis / 100) * price)).toFixed(2));
        });
        CalculateCommonFinalPrice();
    });

    function SteponePrice() {
        var str = 0;
        $(".clspriceone").each(function (i, v) {
            if ($(this).val() !== "") {
                var count = 1;
                var price = parseInt($(this).val());
                var id = $(this).attr("id").replace("price_" + count  + "_", "");
                var packsize = $("#packsize_" + count + "_" + id).val();
                if (packsize != '' && packsize != null && packsize != undefined && packsize > 0) {
                    price = price * parseInt(packsize);
                }
                str += price;

            }
            checkPriceValidation($(this).attr('id'), $(this).val());
        });
        $("#clspriceonetext").text(str);

        refreshHighlighted();
    }

    $(document).on("keyup", ".clspricetwopack", function () {
        StepTwoPrice();
    });
    $(document).on("keyup", ".clspricetwo", function () {
        StepTwoPrice();
    });
    function StepTwoPrice() {
        var str = 0;
        $(".clspricetwo").each(function (i, v) {
            if ($(this).val() !== "") {
                var count = 2;
                var price = parseInt($(this).val());
                var id = $(this).attr("id").replace("price_" + count + "_", "");
                var packsize = $("#packsize_" + count + "_" + id).val();
                if (packsize != '' && packsize != null && packsize != undefined && packsize > 0) {
                    price = price * parseInt(packsize);
                }
                str += price;
            }
            checkPriceValidation($(this).attr('id'), $(this).val());
        });
        $("#clspricetwotext").text(str);

        refreshHighlighted();
    }


    $(document).on("keyup", ".clspricethreepack", function () {
        StepThreePrice();
    });
    $(document).on("keyup", ".clspricethree", function () {
        StepThreePrice();
    });

    function StepThreePrice() {
        var str = 0;
        $(".clspricethree").each(function (i, v) {
            if ($(this).val() !== "") {
                var count = 3;
                var price = parseInt($(this).val());
                var id = $(this).attr("id").replace("price_" + count + "_", "");
                var packsize = $("#packsize_" + count + "_" + id).val();
                if (packsize != '' && packsize != null && packsize != undefined && packsize > 0) {
                    price = price * parseInt(packsize);
                }
                str += price;
            }
            checkPriceValidation($(this).attr('id'), $(this).val());
        });
        $("#clspricethreetext").text(str);

        refreshHighlighted();
    }

    $(document).on("keyup", ".clspricefour", function () {
        StepFourPrice();
    });
    $(document).on("keyup", ".clspricethreepack", function () {
        StepFourPrice();
    });
    function StepFourPrice() {
        var str = 0;
        $(".clspricefour").each(function (i, v) {
            if ($(this).val() !== "") {
                var count = 4;
                var price = parseInt($(this).val());
                var id = $(this).attr("id").replace("price_" + count + "_", "");
                var packsize = $("#packsize_" + count + "_" + id).val();
                if (packsize != '' && packsize != null && packsize != undefined && packsize > 0) {
                    price = price * parseInt(packsize);
                }
                str += price;
            }
            checkPriceValidation($(this).attr('id'), $(this).val());
        });
        $("#clspricefourtext").text(str);

        refreshHighlighted();
    }
    $(document).on("keyup", ".clspricefive", function () {
        var str = 0;
        $(".clspricefive").each(function (i, v) {
            if ($(this).val() !== "") {
                str += parseInt($(this).val());
            }
        });
        $("#clspricefivetext").text(str);
        refreshHighlighted();
    });

    function checkPriceValidation(elementId, priceValue) {
        $("#" + elementId).css('border', '');
        var currency = $("#Currency").val();
        if (currency === "INR") {
            if (priceValue.length != 0 && priceValue.length <= 3) {
                //toastr.warning("Entered price going less then 3 digits.")
                $("#" + elementId).css('border', '3px solid red');
            }
        }
        else{
            if (priceValue.length != 0 && priceValue.length >= 5) {
                //toastr.warning("Entered price going higher then 5 digits.")
                $("#" + elementId).css('border', '3px solid red');
            }
        }
    }

    function LoaddefaultRedIcon() {
        $(".clspriceonemg").each(function () {
            checkQtyValidation($(this).attr('id'), $(this).val());
        });
        $(".clspricetwomg").each(function () {
            checkQtyValidation($(this).attr('id'), $(this).val());
        });
        $(".clspricethreemg").each(function () {
            checkQtyValidation($(this).attr('id'), $(this).val());
        });
        $(".clspricefourmg").each(function () {
            checkQtyValidation($(this).attr('id'), $(this).val());
        });
    }

    $(document).on("keyup", ".clspriceonemg, .clspricetwomg, .clspricethreemg, .clspricefourmg", function () {
        checkQtyValidation($(this).attr('id'), $(this).val());
    });
    function checkQtyValidation(elementId, priceValue) {
        var id = elementId.replace('pricemg_1_', '').replace('pricemg_2_', '').replace('pricemg_3_', '').replace('pricemg_4_', '');
        var qtyList = [];
        $("#batchno_" + id + " > option").each(function (i, v) {
            var strind = v.text.indexOf('(') + 1;
            var endind = v.text.indexOf(')');
            var valueqty = v.text.substr(strind, (endind - strind));
            if (valueqty !== '') {
                qtyList.push(valueqty);
            }
        });
        $("#" + elementId).css('border', '');
        var maxvalue = Math.max.apply(Math, qtyList);
        if (maxvalue < parseInt(priceValue)) {
            /*toastr.warning("Entered Qty going higher then your available Qty.")*/
            $("#" + elementId).css('border', '3px solid red');
        }

    }

    function refreshHighlighted() {
        $(".clspriceone").each(function (i, v) {
            var id = $(this).attr("id").replace("price_1_", "");
            if ($(this).val() === "" && $("#pricemg_1_" + id).val() !== "") {
                $(this).css("background", "#c8d1f1");
            }
            else {
                $(this).css("background", "");
            }

            if ($("#casno_" + id).val() === "" && $("#catno_" + id).val() === "") {
                $("#casno_" + id).css("background", "#c8d1f1");
                $("#catno_" + id).css("background", "#c8d1f1");
            }
            else {
                $("#casno_" + id).css("background", "");
                $("#catno_" + id).css("background", "");
            }
        });
        $(".clspricetwo").each(function (i, v) {
            var id = $(this).attr("id").replace("price_2_", "");
            if ($(this).val() === "" && $("#pricemg_2_" + id).val() !== "") {
                $(this).css("background", "#c8d1f1");
            } else {
                $(this).css("background", "");
            }
        });
        $(".clspricethree").each(function (i, v) {
            var id = $(this).attr("id").replace("price_3_", "");
            if ($(this).val() === "" && $("#pricemg_3_" + id).val() !== "") {
                $(this).css("background", "#c8d1f1");
            } else {
                $(this).css("background", "");
            }
        });
        $(".clspricefour").each(function (i, v) {
            var id = $(this).attr("id").replace("price_4_", "");
            if ($(this).val() === "" && $("#pricemg_4_" + id).val() !== "") {
                $(this).css("background", "#c8d1f1");
            } else {
                $(this).css("background", "");
            }
        });
        $(".clspricefive").each(function (i, v) {
            var id = $(this).attr("id").replace("price_5_", "");
            if ($(this).val() === "" && $("#pricemg_5_" + id).val() !== "") {
                $(this).css("background", "#c8d1f1");
            } else {
                $(this).css("background", "");
            }
        });
        setTimeout(function () {
            $(".clstblleadtime").each(function (i, v) {
                if ($(this).val() === "") {
                    $(this).css("background", "#c8d1f1");
                } else {
                    $(this).css("background", "");
                }
            });
        }, 500);
        checkisFollowup();
    }

    $(document).on("keyup", ".clsmasterleadtime", function () {
        var value = $(this).val();
        $(".clstblleadtime").each(function (i, v) {
            $(this).val(value);
        });
    });
    $(document).on("keyup", ".clsmasterproductremark", function () {
        var value = $(this).val();
        $(".clstblproductremark").each(function (i, v) {
            $(this).val(value);
        });
    });
    $(document).on("keyup", ".clsmasterone", function () {
        var value = $(this).val();
        $(".clspriceonemg").each(function (i, v) {
            $(this).val(value);

        });
    });
    $(document).on("keyup", ".clsmastertwo", function () {
        var value = $(this).val();
        $(".clspricetwomg").each(function (i, v) {
            $(this).val(value);

        });
    });
    $(document).on("keyup", ".clsmasterthree", function () {
        var value = $(this).val();
        $(".clspricethreemg").each(function (i, v) {
            $(this).val(value);

        });
    });
    $(document).on("keyup", ".clsmasterfour", function () {
        var value = $(this).val();
        $(".clspricefourmg").each(function (i, v) {
            $(this).val(value);

        });
    });

    $(document).on("click", "#chkpredefined", function () {
        var value = $(this).is(":checked");
        if (value) {
            swal({
                title: "Are you sure?",
                text: "All price mg will change.",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, change it!",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $(".clspriceonemg").each(function () {
                            $(this).val('10');
                        });
                        $(".clspricetwomg").val('25');
                        $(".clspricethreemg").val('50');
                        $(".clspricefourmg").val('100');
                    } else {
                        toastr.error("Your mg price safe :)");
                    }
                });
        }
        else {
            swal({
                title: "Are you sure?",
                text: "It will clear all price mg value.",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, change it!",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: true,
                closeOnCancel: true
            },
                function (isConfirm) {
                    if (isConfirm) {
                        $(".clspriceonemg").each(function () {
                            $(this).val('');
                        });
                        $(".clspricetwomg").val('');
                        $(".clspricethreemg").val('');
                        $(".clspricefourmg").val('');
                    } else {
                        toastr.error("Your mg price safe :)");
                    }
                });
        }
    });


    function refreshDiscountPrice() {
        var strone = 0;
        $(".clspriceone").each(function (i, v) {
            var id = $(this).attr('id').replace('price_1_', '');
            var dis = $("#discount_" + id).val();
            if ($(this).val().trim() !== "") {
                if (dis !== '') {
                    dis = parseFloat(dis);
                    strone += $(this).val() - (($(this).val() / 100) * dis);
                }
                else {
                    strone += parseFloat($(this).val());
                }
            }
        });
        var strtwo = 0;
        $(".clspricetwo").each(function (i, v) {
            var id = $(this).attr('id').replace('price_2_', '');
            var dis = $("#discount_" + id).val();
            if ($(this).val().trim() !== "") {
                if (dis !== '') {
                    dis = parseFloat(dis);
                    strtwo += $(this).val() - (($(this).val() / 100) * dis);
                }
                else {
                    strtwo += parseFloat($(this).val());
                }
            }
        });
        var strthree = 0;
        $(".clspricethree").each(function (i, v) {
            var id = $(this).attr('id').replace('price_3_', '');
            var dis = $("#discount_" + id).val();
            if ($(this).val().trim() !== "") {
                if (dis !== '') {
                    dis = parseFloat(dis);
                    strthree += $(this).val() - (($(this).val() / 100) * dis);
                }
                else {
                    strthree += parseFloat($(this).val());
                }
            }
        });
        var strfour = 0;
        $(".clspricefour").each(function (i, v) {
            var id = $(this).attr('id').replace('price_4_', '');
            var dis = $("#discount_" + id).val();
            if ($(this).val().trim() !== "") {
                if (dis !== '') {
                    dis = parseFloat(dis);
                    strfour += $(this).val() - (($(this).val() / 100) * dis);
                }
                else {
                    strfour += parseFloat($(this).val());
                }
            }
        });
        var strfive = 0;
        $(".clspricefive").each(function (i, v) {
            var id = $(this).attr('id').replace('price_5_', '');
            var dis = $("#discount_" + id).val();
            if ($(this).val().trim() !== "") {
                if (dis !== '') {
                    dis = parseFloat(dis);
                    strfive += $(this).val() - (($(this).val() / 100) * dis);
                }
                else {
                    strfive += parseFloat($(this).val());
                }
            }
        });
        $("#clspriceonetext").text(strone);
        $("#clspricefourtext").text(strfour);
        $("#clspricetwotext").text(strtwo);
        $("#clspricethreetext").text(strthree);
        $("#clspricefivetext").text(strfive);

        SteponePrice();
        StepTwoPrice();
        StepThreePrice();
        StepFourPrice();

        checkisFollowup();
    }

    function checkisFollowup() {
        var pri1 = 0;
        if ($("#clspriceonetext").text() !== "") {
            pri1 = parseInt($("#clspriceonetext").text());
        }
        else {
            pri1 = 0;
        }
        var pri2 = 0;
        if ($("#clspricetwotext").text() !== "") {
            pri2 = parseInt($("#clspricetwotext").text());
        }
        else {
            pri2 = 0;
        }
        var pri3 = 0;
        if ($("#clspricethreetext").text() !== "") {
            pri3 = parseInt($("#clspricethreetext").text());
        }
        else {
            pri3 = 0;
        }
        var pri4 = 0;
        if ($("#clspricefourtext").text() !== "") {
            pri4 = parseInt($("#clspricefourtext").text());
        }
        else {
            pri4 = 0;
        }
        var pri5 = 0;
        if ($("#clspricefivetext").text() !== "") {
            pri5 = parseInt($("#clspricefivetext").text());
        }
        else {
            pri5 = 0;
        }
        var finpri = pri1 + pri2 + pri3 + pri4 + pri5;
        if ($('input[name=CountryType]:checked').val() === "Export") {
            if (finpri >= 4000) {
                $("#IsFollowupRequired").prop('checked', true);
            }
        }
        else {
            if (finpri >= 300000) {
                $("#IsFollowupRequired").prop('checked', true);
            }
        }
    }

    $(document).on("keyup", ".clsdiscount", function () {
        refreshDiscountPrice();
    });

    $(document).on("keyup", ".clscommondiscount", function () {
        $(".clsdiscount").val($(this).val());
        refreshDiscountPrice();
    });

    //setup before functions
    var pronametypingTimer;                //timer identifier
    var doneTypingprodnameInterval = 3000;  //time in ms (5 seconds)

    //on keyup, start the countdown
    $('#ProductName').keyup(function () {
        clearTimeout(pronametypingTimer);
        if ($('#ProductName').val()) {
            typingTimer = setTimeout(ProductNameTyping, doneTypingprodnameInterval);
        }
    });

    //user is "finished typing," do something
    function ProductNameTyping() {
        $.ajax({
            url: "/Form/GetAllProductName?value=" + $('#ProductName').val(),
            dataType: "json",
            data: {},
            success: function (data) {
                autocomplete(document.getElementById("ProductName"), data);
            }
        });
    }

    function MarkAsQC(id) {
        $.ajax({
            url: "/Form/MarkAsQc?id=" + id,
            dataType: "json",
            data: {},
            success: function (data) {
                Quote.getProductListForQuote('@Model.Id');
            }
        });
    }

    function RemoveAsQC(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this change!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        url: "/Form/RemoveAsQc?id=" + id,
                                dataType: "json",
                                data: {},
                                success: function (data) {
                                    Quote.getProductListForQuote('@Model.Id');
                                }
                            });
                } else {
                    toastr.error("Your added changes is safe :)");
                }
            });

    }

    function MarkAsPurchase(id) {

        saveallalreadyProduct($('#IsCOA').is(":checked"));

        $.ajax({
            url: "/Form/MarkAsPurchase?id=" + id,
            dataType: "json",
            data: {},
            success: function (data) {
                setTimeout(function () {
                    Quote.getProductListForQuote('@Model.Id');
                }, 1500);
            }
        });
    }

    function RemoveAsPurchase(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this change!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {

                    saveallalreadyProduct($('#IsCOA').is(":checked"));

                    $.ajax({
                        url: "/Form/RemoveAsPurchase?id=" + id,
                                dataType: "json",
                                data: {},
                                success: function (data) {
                                    Quote.getProductListForQuote('@Model.Id');
                                }
                            });
                } else {
                    toastr.error("Your added changes is safe :)");
                }
            });

    }

    $("#ConversionNumber").bind("paste", function (e) {
        // access the clipboard using the api
        var pastedData = e.originalEvent.clipboardData.getData('text');
        $.ajax({
            url: "/Form/SaveConversionData?id=" + $("#QuoteId").val() + "&conversionnumber=" + pastedData,
            dataType: "json",
            data: {},
            success: function (data) {
                if (data.success === true) {
                    toastr.success('Conversion Number Saved Successfully');
                }

                return false;
            }
        });
    });

    //SteponePrice();
    //StepTwoPrice();
    //StepThreePrice();
    //StepFourPrice();


    function sendQuoteEmail() {
        $.ajax({
            type: "GET",
            url: "/Form/GetSendEmailFromQuoteTemplate?id=" + $("#QuoteId").val(),
            success: function (results) {
                $('#myModal').find('.modal-body').html(results.html);
                $('#myModal').modal({ show: true });
                $('#myModal').find(".modal-dialog").css("width", "1080px");
                $('#myModal').find(".modal-dialog").css("height", "1080px");
            }
        });

    }

    var currancyListData = [];
    $.ajax({
                        type: "GET",
                            url: "/Form/GetCurrencyData",
                        dataType: "json",
                        traditional: true,
                        data: {},
                        success: function (result) {
                            $(result).each(function (i, v) {
                                currancyListData.push(v.Symbol);
                            });

                        }
                    });

    function ConvertToOtherCurrancy(quoteId) {
        var str = "<div class='row'><div class='col-md-12'><select id='ddlcurrancyselector' class='form-control'>";
        $(currancyListData).each(function (i,v) {
            str += "<option value='"+v+"'>"+v+"</option>";
        });
        str += "</select></div></div>";

        swal({
            title: "Are you sure want to convert it?",
            text: str,
            html: true,
            type: "warning", customClass: 'swalwide',
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, Added it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: false,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    var oldCurrancy = $("#Currency").val();
                    var changecurrancy = $("#ddlcurrancyselector").val();
                    if (oldCurrancy === changecurrancy) {
                        toastr.error("Please select diff currancy");
                        return false;
                    }
                    $.ajax({
                        type: "GET",
                        url: "https://api.frankfurter.app/latest?amount=1&from=" + oldCurrancy + "&to=" + changecurrancy,
                        dataType: "json",
                        traditional: true,
                        data: {},
                        success: function (result) {
                            var exchangeRate = result.rates[changecurrancy];
                            $.ajax({
                                type: "GET",
                                url: "/form/convertquotecurrancy?id=" + quoteId + "&to=" + changecurrancy + "&rate=" + exchangeRate,
                                dataType: "json",
                                traditional: true,
                                data: {},
                                success: function (result) {
                                    toastr.success("Successfully Updated Quote.");
                                    setTimeout(function () {
                                        window.location.reload(true);
                                    }, 1500);

                                }
                            });

                        }
                    });
                    //var parkreason = "";
                    //$.ajax({
                    //    type: "GET",
                    //    url: "/Form/ParkQuotationdetail?status=" + true + "&id=" + id + "&parkreason=" + parkreason,
                    //    dataType: "json",
                    //    traditional: true,
                    //    data: {},
                    //    success: function (result) {
                    //        toastr.success("You have added new product.");
                    //        window.location.href = "/Form/TodayDashboard";
                    //    }
                    //});
                } else {
                    toastr.error("Your added quotation is safe :)");
                }
            });
    }
</script>
<style>
    .lightred {
        color: lightcoral;
    }

    #dvTempProductList input[type=text] {
        padding: 0px;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        padding: 5px;
    }

    table th, table td {
        border: 1px solid #a4a4a4 !important;
    }

    #tblalready .autocomplete-items, #ProductNameautocomplete-list .autocomplete-items {
        position: relative;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 9999;
        top: 0%;
        left: 0;
        right: 0;
    }

    .autocomplete-items div {
        text-align: left;
    }
</style>
@if (isQuoteViewOnly)
{
    <text>
        <script type="text/javascript">
            setInterval(function () {
                $(".btn").css('display', 'none');
                $(".fa-history").css('display', 'none');
                $(".fa-clone").css('display', 'none');
                $(".fa-cube").css('display', 'none');
                $("#impExcelFile").css('display', 'none');
            }, 1000);

        </script>
    </text>
}
<style type="text/css">
    option.red {
        color: #cc0000;
    }

    #detFromDBImage:hover {
        cursor: pointer;
    }
</style>
@*@if (Model.HideButton.HasValue && Model.HideButton.Value)
    {
        <text>
            <script type="text/javascript">
                $(".btn").hide();
            </script>
        </text>
    }*@