@using Synzeal_Inventory.Models;
@model DashboardModel
@{
    ViewBag.Title = "Todays Quotations";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var synthesiscatno = Model.SynthesisCatNo;
    var reviewedList = Model.Reviewed;
    var instockList = Model.Instock;
    var customSynthesisList = Model.CustomSynthesis;
    var studyData = Model.StudyData;
    var rFQQuoteData = Model.RFQQuoteData;
    var approvedList = Model.Approved;
    var preapprovedList = Model.PreApproved;
    var quotationList = Model.QuotationList;
    var listofquotedetails = Model.listofquotedetails;
    var listofquotedetailscurrent = Model.listofquotedetailsCurrent;
    var totalEmail = 0;

}
@functions{
    public string ReminderCount(Synzeal_Inventory.Entity.SZ_Quotation item)
    {
        var outputstr = "";
        if (item.ReminderCount != null && item.ReminderCount > 0)
        {
            if (item.ReminderCount == 1)
            {
                outputstr = "<span style='background: #c7db52; border-radius: 5px; color: #fff; padding: 0 7px; '><span>R</span>" + item.ReminderCount + "</span>";
            }
            if (item.ReminderCount == 2)
            {
                outputstr = "<span style= 'background: #4d85b8; border-radius: 5px; color: #fff; padding: 0 7px;' ><span>R</span>" + item.ReminderCount + "</span>";
            }
            if (item.ReminderCount == 3)
            {
                outputstr = "<span style= 'background: #ca5f27; border-radius: 5px; color: #fff; padding: 0 7px;' ><span>R</span>" + item.ReminderCount + "</span>";
            }
        }
        return outputstr;
    }
}
<link href="~/css/PrintTodaydashboard.css" rel="stylesheet" />
<section class="content-header">
    <h1>
        Today's Quotations
        <a href="/Form/BDDashboard" class="btn btn-warning" style="float:right;margin-left:10px">BD Dashboard</a>
        <a href="javascript:void(0)" class="btn btn-primary" onclick="window.print()" style="float:right;margin-left:10px">Print</a>
        @*<a href="javascript:void(0)" class="btn btn-primary" onclick="saveallremind()" style="float:right;margin-left:10px">Save All</a>*@
        <a href="/Form/Dashboard" class="btn btn-primary" style="float:right">Go to Dashboard</a>
        <a href="javascript:void(0)" class="btn btn-primary" onclick="addInStudy()" style="float:right;margin-right:10px">Study</a>
        <a href="javascript:void(0)" class="btn btn-primary" onclick="addInRegret()" style="float:right;margin-right:10px">Regret</a>
        <a href="javascript:void(0)" class="btn btn-primary" onclick="openall()" style="float:right;margin-right:10px">Open All</a>

        @Html.DropDownList("compList", (IEnumerable<SelectListItem>)ViewBag.compList, new { @class = "form-control", @style = "width:15%; margin-right:15px; float:right", @onchange = "filtercomap()" })
        <input style="float:right;width:250px;margin-right:10px;" type="text" class="form-control" id="filtertext" />
        @Html.DropDownList("ddlGeographicalLocation", (IEnumerable<SelectListItem>)ViewBag.GeographicalLocationList, null, new { @class = "form-control", @style = "width: 250px;", @onchange = "geographycalflter()" })

        <a href="javascript:void(0)" id="start-btn" style="float: right; width: 18px; padding-right: 15px; font-size: 16px; margin-top: 7px;">
            <i class="fa fa-microphone"></i>
        </a>
        <a href="javascript:void(0)" id="create" style="display: none; float: right; width: 18px; padding-right: 15px; font-size: 16px; margin-top: 7px;">
            <i class="fa fa-ban"></i>
        </a>
        <br />
        <p style="font-size:13px; float:right; display: none" id="instration">Press Start Voice Recognition</p>
    </h1>
</section>
<section class="content" style="margin-top: 10px">
    <div class="row">
        <div class="col-md-6">
            <!-- left column -->
            <div class="col-md-12" id="divinstock">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">In-Stock (@instockList.Count)</h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divinstock')">
                                <option value="2">Last 2 Days</option>
                                <option value="3">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0" selected>All</option>
                            </select>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <form role="form">
                        <div class="box-body">
                            @if (instockList != null && instockList.Count > 0)
                            {
                                <div class="col-md-6">
                                    <b>Domestic</b>  <input type="checkbox" id="selectallinstockdomestic" />
                                    @foreach (var item in instockList.Where(x => x.CountryType == "Domestic").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList(); var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckinstockdomestic" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count())  - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>

                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b><input type="checkbox" id="selectallinstockexport" />
                                    @foreach (var item in instockList.Where(x => x.CountryType == "Export").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }

                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList(); var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">

                                            @*@if (item.IsReminder.HasValue && item.IsReminder.Value)
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" checked />
        }
        else
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
        }*@
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckinstockexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count())  - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>

                            }
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-12" id="divreviewed">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Reviewed (@reviewedList.Count) </h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divreviewed')">
                                <option value="2">Last 2 Days</option>
                                <option value="3">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0" selected>All</option>
                            </select>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <form role="form">
                        <div class="box-body">
                            @if (reviewedList != null && reviewedList.Count > 0)
                            {
                                <div class="col-md-6">
                                    <b>Domestic</b>  <input type="checkbox" id="selectallrevieweddomestic" />
                                    @foreach (var item in reviewedList.Where(x => x.CountryType == "Domestic").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12  clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">

                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckreviewdomestic" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count())  - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b>  <input type="checkbox" id="selectallreviewedexport" />
                                    @foreach (var item in reviewedList.Where(x => x.CountryType == "Export").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12  clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">

                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckreviewexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count())  - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>

                            }

                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-12" id="divpreapprovedrevision">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Pre-Approved / Revision  (@preapprovedList.Count)</h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divpreapprovedrevision')">
                                <option value="2">Last 2 Days</option>
                                <option value="3">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0" selected>All</option>
                            </select>
                        </div>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (preapprovedList != null && preapprovedList.Count > 0)
                            {
                                <div class="col-md-6">
                                    <b>Domestic</b> <input type="checkbox" id="selectallpreapprdomestic" />
                                    @foreach (var item in preapprovedList.Where(x => x.CountryType == "Domestic").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreApproved.HasValue && item.IsPreApproved.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsRevision.HasValue && item.IsRevision.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckpreapprexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b> <input type="checkbox" id="selectallpreapprexport" />
                                    @foreach (var item in preapprovedList.Where(x => x.CountryType == "Export").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreApproved.HasValue && item.IsPreApproved.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsRevision.HasValue && item.IsRevision.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckpreappexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a>
                                            <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>

                            }
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-12" id="divapproved">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Approved (@approvedList.Count)</h3>
                        @*<div class="pull-right">
                                <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divapproved')">
                                    <option value="2">Last 2 Days</option>
                                    <option value="7" selected>Last 7 Days</option>
                                    <option value="0">All</option>
                                </select>
                            </div>*@
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (approvedList != null && approvedList.Count > 0)
                            {
                                <div class="col-md-6">
                                    <b>Domestic</b> <input type="checkbox" id="selectallappdomestic" />
                                    @foreach (var item in approvedList.Where(x => x.CountryType == "Domestic").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckappexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b> <input type="checkbox" id="selectallappexport" />
                                    @foreach (var item in approvedList.Where(x => x.CountryType == "Export").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }

                                        <div class="col-md-12">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckappexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>

                            }
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-12 clsmonthreport">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Sent Quotation (@quotationList.Count)</h3>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (quotationList != null && quotationList.Count > 0)
                            {
                                <div class="col-md-6">
                                    <b>Domestic</b>
                                    @foreach (var item in quotationList.Where(x => x.CountryType == "Domestic").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12">
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b>
                                    @foreach (var item in quotationList.Where(x => x.CountryType == "Export").ToList())
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12">
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="col-md-12" id="divcustomsynthesis">
                <div class="box box-info clsCustomSynthesis">
                    <div class="box-header with-border">
                        <h3 class="box-title">Custom Synthesis @*(@DateTime.Now.AddDays(-2).ToShortDateString() - @DateTime.Now.ToShortDateString())*@ </h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divcustomsynthesis')">
                                <option value="2">Last 2 Days</option>
                                <option value="3" selected="selected">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0">All</option>
                            </select>
                        </div>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (customSynthesisList != null && customSynthesisList.Count > 0)
                            {
                                //DateTime startdate = DateTime.Now.AddDays(-2);
                                //DateTime enddate = DateTime.Now;
                                <div class="col-md-6">
                                    <b>Domestic</b> <input type="checkbox" id="selectallcustsyndomestic" />
                                    @foreach (var item in customSynthesisList.Where(x => x.CountryType == "Domestic"))
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckcustsyndomestic" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b> <input type="checkbox" id="selectallcustsynexport" />
                                    @*@foreach (var item in customSynthesisList.Where(x => x.CreatedDate >= startdate && x.CreatedDate <= enddate && x.CountryType == "Export"))*@
                                    @foreach (var item in customSynthesisList.Where(x => x.CountryType == "Export"))
                                    {
                                        if (item.CompanyName == null || item.SZ_QuotationDetail == null || item.SZ_QuotationDetail.Count == 0)
                                        {
                                            continue;
                                        }
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckcustsynexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-12" id="divrfq">
                <div class="box clsCustomSynthesis">
                    <div class="box-header with-border">
                        <h3 class="box-title">RFQ <span style="color: red">(@ViewBag.RFQCount)</span></h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divrfq')">
                                <option value="2">Last 2 Days</option>
                                <option value="3">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0" selected>All</option>
                            </select>
                        </div>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (rFQQuoteData != null && rFQQuoteData.Count > 0)
                            {
                                DateTime startdate = DateTime.Now.AddDays(-2);
                                DateTime enddate = DateTime.Now;
                                <div class="col-md-6">
                                    <b>Domestic</b><input type="checkbox" id="selectallrfqdomestic" />
                                    @foreach (var item in rFQQuoteData.Where(x => x.CountryType == "Domestic"))
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }
                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckrfqdomestic" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b><input type="checkbox" id="selectallrfqexport" />
                                    @foreach (var item in rFQQuoteData.Where(x => x.CountryType == "Export"))
                                    {
                                        if (item.CompanyName == null || item.SZ_QuotationDetail == null || item.SZ_QuotationDetail.Count == 0)
                                        {
                                            continue;
                                        }
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind clscheckrfqexport" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-md-12" id="divstudy">
                <div class="box box-info clsCustomSynthesis">
                    <div class="box-header with-border">
                        <h3 class="box-title">Study</h3>
                        <div class="pull-right">
                            <select id="ddldatefilter" class="form-control" style="float:right" onchange="dateflter('divstudy')">
                                <option value="2">Last 2 Days</option>
                                <option value="3">Last 3 Days</option>
                                <option value="4">Last 4 Days</option>
                                <option value="5">Last 5 Days</option>
                                <option value="6">Last 6 Days</option>
                                <option value="7">Last 7 Days</option>
                                <option value="0" selected>All</option>
                            </select>
                        </div>
                    </div>
                    <form role="form">
                        <div class="box-body">
                            @if (studyData != null && studyData.Count > 0)
                            {
                                DateTime startdate = DateTime.Now.AddDays(-2);
                                DateTime enddate = DateTime.Now;
                                <div class="col-md-6">
                                    <b>Domestic</b>
                                    @foreach (var item in studyData.Where(x => x.CountryType == "Domestic"))
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12 clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            @*@if (item.IsReminder.HasValue && item.IsReminder.Value)
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" checked />
        }
        else
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
        }*@


                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b>
                                    @foreach (var item in studyData.Where(x => x.CountryType == "Export"))
                                    {
                                        if (item.CompanyName == null || item.SZ_QuotationDetail == null || item.SZ_QuotationDetail.Count == 0)
                                        {
                                            continue;
                                        }
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        var catnolist = item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.CATNo)).Select(x => x.CATNo).ToList();
                                        var anyavailable = catnolist.Where(x => synthesiscatno.Contains(x)).Any();
                                        var underline = "";
                                        if (anyavailable)
                                        {
                                            underline = "text-decoration:underline";
                                        }

                                        <div class="col-md-12  clsdateflt" createddate="@item.CreatedDate" geographycal="@item.SZ_CompanyList.GeographicalLocation">
                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" style="@underline">
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>

                            }

                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-12 clsmonthreport clsCustomSynthesis">
                <form role="form">
                    <div class="box box-info collapsed-box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Custom Synthesis (@DateTime.Now.AddDays(-10).ToShortDateString() - @DateTime.Now.AddDays(-3).ToShortDateString())</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                                    <i class="fa fa-plus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>
                            </div>
                        </div>

                        <div class="box-body">
                            @if (customSynthesisList != null && customSynthesisList.Count > 0)
                            {
                                DateTime startdate = DateTime.Now.AddDays(-10);
                                DateTime enddate = DateTime.Now.AddDays(-3);
                                <div class="col-md-6">
                                    <b>Domestic</b>
                                    @foreach (var item in customSynthesisList.Where(x => x.CreatedDate >= startdate && x.CreatedDate <= enddate && x.CountryType == "Domestic"))
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }

                                        <div class="col-md-12">
                                            @*@if (item.IsReminder.HasValue && item.IsReminder.Value)
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" checked />
        }
        else
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
        }*@


                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <b>Export</b>
                                    @foreach (var item in customSynthesisList.Where(x => x.CreatedDate >= startdate && x.CreatedDate <= enddate && x.CountryType == "Export"))
                                    {
                                        var cls = "";
                                        if (item.IsPreviewed.HasValue && item.IsPreviewed.Value)
                                        {
                                            cls = "clsorange";
                                        }
                                        if (item.IsReviewed.HasValue && item.IsReviewed.Value)
                                        {
                                            cls = "clsblue";
                                        }
                                        if (item.IsRegret.HasValue && item.IsRegret.Value)
                                        {
                                            cls = "clslightgreen";
                                        }
                                        <div class="col-md-12">
                                            @*@if (item.IsReminder.HasValue && item.IsReminder.Value)
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" checked />
        }
        else
        {
            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
        }*@


                                            <input type="checkbox" value="@item.Id" class="clscheckboxremind" />
                                            <a href="/Form/Quote/@item.Id" class="@cls" @*style="@underline"*@>
                                                @item.CompanyName - @item.Ref (@item.SZ_QuotationDetail.Count()) - @item.SZ_QuotationDetail.Where(x => !string.IsNullOrEmpty(x.ProductName)).OrderBy(x => x.DisplayOrder).Select(x => x.ProductName.Split(' ')[0]).FirstOrDefault()
                                                @if (!string.IsNullOrEmpty(item.CreatedBy))
                                                {
                                                    try
                                                    {
                                                        <span>(</span> @item.CreatedBy.Split(' ')[0].Substring(0, 1) @item.CreatedBy.Split(' ')[1].Substring(0, 1)<span>)</span>
                                                    }
                                                    catch
                                                    {
                                                    }
                                                }
                                                @if (item.IsReminder.HasValue && item.IsReminder.Value)
                                                {
                                                    <img src="~/img/star.png" width="14px" height="14px" />
                                                }
                                            </a> <i class="fa fa-copy" onclick="copy('@item.Ref')"></i>
                                            @Html.Raw(ReminderCount(item))
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                    </div>
                </form>
            </div>
        </div>

        <!--<div class="col-md-12 clsmonthreport">-->
        <!-- left column -->
        <!--<div class="col-md-12">-->
        <!-- general form elements -->
        <!--<div>-->
        <!-- /.box-header -->
        <!-- form start -->
        <!--<form role="form">
        <div class="box collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Quotation Summary Dated @DateTime.Now.AddDays(-1).ToShortDateString()
                </h3>

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                        <i class="fa fa-plus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body" style="display:none">
                <table class="table table-reponsive">
                    <thead>
                        <tr>
                            <th>
                                Sr. No
                            </th>
                            <th>
                                Teammate
                            </th>
                            <th style="text-align:center">
                                In Stock
                            </th>
                            <th style="text-align:center">
                                Synthesis
                            </th>
                            <th style="text-align:center"> Reviewed</th>
                            <th style="text-align:center">Approved</th>
                            <th style="text-align:center">Deleted</th>
                            <th style="text-align:center">Park</th>
                            <th style="text-align:center">Regretted</th>
                            <th style="text-align:center">Clarification</th>
                            <th style="text-align:center">Upload</th>
                            <th style="text-align:center">Complex</th>
                            <th style="text-align:center">Total</th>
                            <th style="text-align:center"></th>
                        </tr>
                    </thead>
                    <tbody>-->
        @*@{
                int loop = 1;
                var totaloftotal = 0;
                var one = 0;
                var two = 0;
                var three = 0;
                var four = 0;
                var five = 0;
                var six = 0;
                var seven = 0;
                var eight = 0;
                var nine = 0;
                var ten = 0;
                var eleven = 0;

                foreach (var item in listofquotedetails)
                {
                    if (item.Username.ToLower().Contains("ketan")
                        || item.Username.ToLower().Contains("mayur")
                        || item.Username.ToLower().Contains("sagar"))
                    {
                        continue;
                    }
                    if (item.Total.HasValue)
                    {
                        totaloftotal += item.Total.Value;
                    }
                    if (item.InStock.HasValue)
                    {
                        one += item.InStock.Value;
                    }
                    if (item.Synthesis.HasValue)
                    {
                        two += item.Synthesis.Value;
                    }
                    if (item.Reviewed.HasValue)
                    {
                        three += item.Reviewed.Value;
                    }
                    if (item.Approved.HasValue)
                    {
                        four += item.Approved.Value;
                    }
                    if (item.Deleted.HasValue)
                    {
                        five += item.Deleted.Value;
                    }
                    if (item.Park.HasValue)
                    {
                        six += item.Park.Value;
                    }
                    if (item.Regretted.HasValue)
                    {
                        seven += item.Regretted.Value;
                    }
                    if (item.Clarification.HasValue)
                    {
                        eight += item.Clarification.Value;
                    }
                    if (item.Upload.HasValue)
                    {
                        nine += item.Upload.Value;
                    }
                    if (item.Complex.HasValue)
                    {
                        ten += item.Complex.Value;
                    }
                    if (item.Total.HasValue)
                    {
                        eleven += item.Total.Value;
                    }
                    <tr>
                        <td>@loop</td>
                        <td>@item.Username</td>
                        <td style="text-align:center">@item.InStock</td>
                        <td style="text-align:center">@item.Synthesis</td>
                        <td style="text-align:center">@item.Reviewed</td>
                        <td style="text-align:center">@item.Approved</td>
                        <td style="text-align:center">@item.Deleted</td>
                        <td style="text-align:center">@item.Park</td>
                        <td style="text-align:center">@item.Regretted</td>
                        <td style="text-align:center">
                            <input style="width: 50px;text-align:center" type="text" id="clarification_1_@item.UserId" value="@item.Clarification" />
                        </td>
                        <td style="text-align:center">
                            <input style="width: 50px;text-align:center" type="text" id="upload_1_@item.UserId" value="@item.Upload" />
                        </td>
                        <td style="text-align:center">
                            <input style="width: 50px;text-align:center" type="text" id="complex_1_@item.UserId" value="@item.Complex" />
                        </td>

                        <td style="text-align:center">
                            @item.Total
                        </td>
                        <td style="text-align:center">
                            @if (SessionCookieManagement.IsAdmin)
                            {
                                <a href="javascript:void(0)" onclick="editsummary(@item.UserId , 1)">Save</a>
                            }
                            @if (!SessionCookieManagement.IsAdmin &&
                                (item.Username == SessionCookieManagement.UserName ||
                                SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
                                SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                            {
                                <a href="javascript:void(0)" onclick="editsummary(@item.UserId , 1)">Save</a>
                            }
                        </td>
                    </tr>
                    loop += 1;
                }

                <tr>
                    <td></td>
                    <td></td>
                    <td style="text-align:center">@one</td>
                    <td style="text-align:center">@two</td>
                    <td style="text-align:center">@three</td>
                    <td style="text-align:center">@four</td>
                    <td style="text-align:center">@five</td>
                    <td style="text-align:center">@six</td>
                    <td style="text-align:center">@seven</td>
                    <td style="text-align:center">@eight</td>
                    <td style="text-align:center">@nine</td>
                    <td style="text-align:center">@ten</td>
                    <td style="text-align:center"><b>@eleven</b></td>
                    <td style="text-align: center; ">
                        <b>Total Quote Made</b>
                    </td>
                </tr>
                <tr>
                    <td colspan="12" style="text-align:right">
                    </td>
                    <td>
                        <input type="text" id="totalemail_1" style="text-align:center;width:50px" value="@totalEmail" />
                        @if (SessionCookieManagement.IsAdmin ||
                            (SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
                            SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                        {
                            <a href="javascript:void(0)" onclick="saveEmailTotal(1)">
                                <i class="fa fa-save"></i>
                            </a>
                        }
                    </td>
                    <td colspan="13" style="text-align: center; ">
                        <b>Total Quote Requests</b>
                    </td>
                </tr>
                <tr>
                    <td colspan="12" style="text-align:right">
                    </td>
                    <td>
                        <input type="text" id="regretted_1" style="text-align:center;width:50px" value="@totalRegretted" />
                        @if (SessionCookieManagement.IsAdmin ||
                            (SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
                            SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                        {
                            <a href="javascript:void(0)" onclick="saveRegrettedTotal(1)">
                                <i class="fa fa-save"></i>
                            </a>
                        }
                    </td>
                    <td colspan="13" style="text-align: center; ">
                        <b>Regretted</b>
                    </td>
                </tr>
                <tr>
                    <td colspan="12" style="text-align:right">
                    </td>
                    <td style="text-align:center">
                        <b>
                            @{
                                var pending = totalEmail - totaloftotal - totalRegretted;
                                if (pending < 0)
                                {
                                    pending = 0;
                                }
                            }

                            @pending
                        </b>
                    </td>
                    <td style="text-align: center; ">
                        <b>
                            Total Pending
                        </b>
                    </td>
                </tr>
            }*@
        @*</tbody>
                                    </table>

                                </div>
                            </div>


                        </form>
                    </div>
                </div>
            </div>*@

        <!--<div class="col-md-12 clsmonthreport">-->
        <!-- left column -->
        <!--<div class="col-md-12">-->
        <!-- general form elements -->
        <!--<div>-->
        <!-- /.box-header -->
        <!-- form start -->
        <!--<form role="form">
        <div class="box  collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Quotation Summary Dated @DateTime.Now.ToShortDateString()
                </h3>

                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                        <i class="fa fa-plus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body" style="display:none">
                <table class="table table-reponsive">
                    <thead>
                        <tr>
                            <th>
                                Sr. No
                            </th>
                            <th>
                                Teammate
                            </th>
                            <th style="text-align:center">
                                In Stock
                            </th>
                            <th style="text-align:center">
                                Synthesis
                            </th>
                            <th style="text-align:center"> Reviewed</th>
                            <th style="text-align:center">Approved</th>
                            <th style="text-align:center">Deleted</th>
                            <th style="text-align:center">Park</th>
                            <th style="text-align:center">Regretted</th>
                            <th style="text-align:center">Clarification</th>
                            <th style="text-align:center">Upload</th>
                            <th style="text-align:center">Complex</th>

                            <th style="text-align:center">Total</th>
                            <th style="text-align:center"></th>
                        </tr>
                    </thead>
                    <tbody>-->
        @*@{
                                                int loopss = 1;
                                                var totaloftotalcurrent = 0;
                                                var onecurrent = 0;
                                                var twocurrent = 0;
                                                var threecurrent = 0;
                                                var fourcurrent = 0;
                                                var fivecurrent = 0;
                                                var sixcurrent = 0;
                                                var sevencurrent = 0;
                                                var eightcurrent = 0;
                                                var ninecurrent = 0;
                                                var tencurrent = 0;
                                                var elevencurrent = 0;
                                                foreach (var item in listofquotedetailscurrent)
                                                {
                                                    if (item.Username.ToLower().Contains("ketan")
                                                       || item.Username.ToLower().Contains("mayur")
                                                        || item.Username.ToLower().Contains("sagar"))
                                                    {
                                                        continue;
                                                    }
                                                    if (item.Total.HasValue)
                                                    {
                                                        totaloftotalcurrent += item.Total.Value;
                                                    }
                                                    if (item.InStock.HasValue)
                                                    {
                                                        onecurrent += item.InStock.Value;
                                                    }
                                                    if (item.Synthesis.HasValue)
                                                    {
                                                        twocurrent += item.Synthesis.Value;
                                                    }
                                                    if (item.Reviewed.HasValue)
                                                    {
                                                        threecurrent += item.Reviewed.Value;
                                                    }
                                                    if (item.Approved.HasValue)
                                                    {
                                                        fourcurrent += item.Approved.Value;
                                                    }
                                                    if (item.Deleted.HasValue)
                                                    {
                                                        fivecurrent += item.Deleted.Value;
                                                    }
                                                    if (item.Park.HasValue)
                                                    {
                                                        sixcurrent += item.Park.Value;
                                                    }
                                                    if (item.Regretted.HasValue)
                                                    {
                                                        sevencurrent += item.Regretted.Value;
                                                    }
                                                    if (item.Clarification.HasValue)
                                                    {
                                                        eightcurrent += item.Clarification.Value;
                                                    }
                                                    if (item.Upload.HasValue)
                                                    {
                                                        ninecurrent += item.Upload.Value;
                                                    }
                                                    if (item.Complex.HasValue)
                                                    {
                                                        tencurrent += item.Complex.Value;
                                                    }
                                                    if (item.Total.HasValue)
                                                    {
                                                        elevencurrent += item.Total.Value;
                                                    }
                                                    <tr>
                                                        <td>@loopss</td>
                                                        <td>@item.Username</td>
                                                        <td style="text-align:center">@item.InStock</td>
                                                        <td style="text-align:center">@item.Synthesis</td>
                                                        <td style="text-align:center">@item.Reviewed</td>
                                                        <td style="text-align:center">@item.Approved</td>
                                                        <td style="text-align:center">@item.Deleted</td>
                                                        <td style="text-align:center">@item.Park</td>
                                                        <td style="text-align:center">@item.Regretted</td>
                                                        <td style="text-align:center">
                                                            <input style="width: 50px;text-align:center" type="text" id="clarification_0_@item.UserId" value="@item.Clarification" />
                                                        </td>
                                                        <td style="text-align:center">
                                                            <input style="width: 50px;text-align:center" type="text" id="upload_0_@item.UserId" value="@item.Upload" />
                                                        </td>
                                                        <td style="text-align:center">
                                                            <input style="width: 50px;text-align:center" type="text" id="complex_0_@item.UserId" value="@item.Complex" />
                                                        </td>

                                                        <td style="text-align:center">
                                                            @item.Total
                                                        </td>
                                                        <td style="text-align:center">
                                                            @if (SessionCookieManagement.IsAdmin)
                                                            {
                                                                <a href="javascript:void(0)" onclick="editsummary(@item.UserId , 0)">Save</a>
                                                            }
                                                            @if (!SessionCookieManagement.IsAdmin &&
            (item.Username == SessionCookieManagement.UserName ||
            SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
            SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                                                            {
                                                                <a href="javascript:void(0)" onclick="editsummary(@item.UserId , 0)">Save</a>
                                                            }
                                                        </td>
                                                    </tr>
                                                    loopss += 1;
                                                }

                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                    <td style="text-align:center">@onecurrent</td>
                                                    <td style="text-align:center">@twocurrent</td>
                                                    <td style="text-align:center">@threecurrent</td>
                                                    <td style="text-align:center">@fourcurrent</td>
                                                    <td style="text-align:center">@fivecurrent</td>
                                                    <td style="text-align:center">@sixcurrent</td>
                                                    <td style="text-align:center">@sevencurrent</td>
                                                    <td style="text-align:center">@eightcurrent</td>
                                                    <td style="text-align:center">@ninecurrent</td>
                                                    <td style="text-align:center">@tencurrent</td>
                                                    <td style="text-align:center"><b>@elevencurrent</b></td>
                                                    <td style="text-align: center; ">
                                                        <b>Total Quote Made</b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan="12" style="text-align:right">
                                                    </td>
                                                    <td>
                                                        <input type="text" id="totalemail_0" style="text-align:center;width:50px" value="@totalEmailCurrent" />
                                                        @if (SessionCookieManagement.IsAdmin ||
                                                            (SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
                                                            SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                                                        {
                                                            <a href="javascript:void(0)" onclick="saveEmailTotal(0)">
                                                                <i class="fa fa-save"></i>
                                                            </a>
                                                        }
                                                    </td>
                                                    <td colspan="13" style="text-align: center; ">
                                                        <b>Total Quote Requests</b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan="12" style="text-align:right">
                                                    </td>
                                                    <td>
                                                        <input type="text" id="regretted_0" style="text-align:center;width:50px" value="@totalRegrettedCurrent" />
                                                        @if (SessionCookieManagement.IsAdmin ||
                                                            (SessionCookieManagement.UserEmail == "nilima@synzeal.com" ||
                                                            SessionCookieManagement.UserEmail == "priya@synzeal.com"))
                                                        {
                                                            <a href="javascript:void(0)" onclick="saveRegrettedTotal(0)">
                                                                <i class="fa fa-save"></i>
                                                            </a>
                                                        }
                                                    </td>
                                                    <td colspan="13" style="text-align: center; ">
                                                        <b>Regretted</b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan="12" style="text-align:right">
                                                    </td>
                                                    <td style="text-align:center">
                                                        <b>
                                                            @{
                                                                var pendingcurrent = totalEmailCurrent - totaloftotalcurrent - totalRegrettedCurrent;
                                                                if (pendingcurrent < 0)
                                                                {
                                                                    pendingcurrent = 0;
                                                                }
                                                            }

                                                            @pendingcurrent
                                                        </b>
                                                    </td>
                                                    <td style="text-align: center; ">
                                                        <b>
                                                            Total Pending
                                                        </b>
                                                    </td>
                                                </tr>

                                            }*@
        @*</tbody>
                                    </table>

                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>*@


        <div class="col-md-12 clsmonthreport">
            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->
                <div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <form role="form">
                        <div class="box  collapsed-box">
                            <div class="box-header with-border">
                                <h3 class="box-title">
                                    Quotation Summary
                                </h3>

                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="box-body" style="display:none">
                                <div>
                                    <select id="ddlsalessummary" class="form-group">
                                        <option value="today">Today</option>
                                        <option value="week">Week</option>
                                        <option value="month">Month</option>
                                    </select>

                                    <select id="ddlsalessummarytypes" style="display:none" class="form-group">
                                    </select>
                                </div>

                                <div id="ddlresultsalessummary"></div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <!--<div class="col-md-12 clsmonthreport">
            <!-- left column -->
        <!--<div class="col-md-12">-->
        <!-- general form elements -->
        <!--<div>-->
        <!-- /.box-header -->
        <!-- form start -->
        <!--<form role="form">-->
        @*@foreach (var mainModel in Model.UserDashboardModel)
            {*@
        <!--<div class="box  collapsed-box">
            <div class="box-header with-border">
                <h3 class="box-title">-->
        @*@mainModel.MonthName <span> - </span> @mainModel.Year</h3>*@

        <!--<div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                    <i class="fa fa-plus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <table class="table table-reponsive">
                <thead>
                    <tr>
                        <th>
                            Sr. No
                        </th>
                        <th>
                            Teammate
                        </th>
                        <th colspan="6" style="text-align:center">
                            Products Added
                        </th>
                        <th colspan="4" style="text-align:center">
                            Products Error
                        </th>
                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>
                            All details
                        </th>
                        <th>
                            Without Cat No
                        </th>-->
        @*<th>
                Without CAS No
            </th>*@
        <!--<th>
            Without Price
        </th>
        <th>
            Total Added
        </th>
        <th>
            Correction(%)
        </th>
        <th>
            Cat No Revision
        </th>-->
        @*<th>
                CAS No revision
            </th>*@
        <!--<th>
            Price Revision
        </th>-->
        @*<th></th>*@
        <!--<th>
                    Price Revision(%)
                </th>
                <th>
                    CAT Revision(%)
                </th>
                <th>
                    Revision Correction(%)
                </th>
            </tr>
        </thead>
        <tbody>-->
        @*@{
                int loops = 1;
                foreach (var item in mainModel.UserDashboardModel)
                {
                    if (item.Username.ToLower().Contains("ketan")
                    || item.Username.ToLower().Contains("mayur")
                    || item.Username.ToLower().Contains("sagar")
                    || item.Username.ToLower().Contains("nisha")
                    || item.Username.ToLower().Contains("prateeksha")
                    || item.Username.ToLower().Contains("harshil"))
                    {
                        continue;
                    }
                    <tr>
                        <td>@loops</td>
                        <td>@item.Username</td>
                        <td>@item.AllDetails</td>
                        <td>@item.WithoutCatNo</td>
                        <td>@item.WithoutPrice</td>
                        <td>@item.TotalAdded</td>
                        <td>
                            @if (item.TotalAdded.HasValue && item.TotalAdded.Value != 0)
                            {
                                var missingperc = ((Convert.ToDecimal(item.TotalAdded) - Convert.ToDecimal(item.AllDetails)) / item.TotalAdded) * 100;
                                @missingperc.Value.ToString("0.00") <span>%</span>
                            }
                        </td>
                        <td>@item.RevisionCatNo</td>
                        <td>@item.RevisionPrice</td>
                        <td>
                            @if (item.TotalAdded.HasValue && item.TotalAdded.Value != 0)
                            {
                                var revisionperc = ((Convert.ToDecimal(item.TotalAdded) - Convert.ToDecimal(item.RevisionPrice)) / item.TotalAdded) * 100;
                                @revisionperc.Value.ToString("0.00") <span>%</span>
                            }
                        </td>
                        <td>
                            @if (item.TotalAdded.HasValue && item.TotalAdded.Value != 0)
                            {
                                var revisionperc = ((Convert.ToDecimal(item.TotalAdded) - Convert.ToDecimal(item.RevisionCatNo)) / item.TotalAdded) * 100;
                                @revisionperc.Value.ToString("0.00") <span>%</span>
                            }
                        </td>
                        <td>
                            @if (item.TotalAdded.HasValue && item.TotalAdded.Value != 0)
                            {
                                var revisionperc = ((Convert.ToDecimal(item.TotalAdded) - Convert.ToDecimal(item.TotalRevisionProduct)) / item.TotalAdded) * 100;
                                @revisionperc.Value.ToString("0.00") <span>%</span>
                            }
                        </td>
                    </tr>
                    loops += 1;
                }
            }*@
        <!--</tbody>
                </table>

            </div>
        </div>-->
        @*}*@

        @*</form>
                    </div>
                </div>
            </div>*@


        <div class="col-md-12">
            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box collapsed-box">
                    <div class="box-header with-border">
                        <h3 class="box-title">Conversion Report</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="" data-original-title="Collapse">
                                <i class="fa fa-plus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="" data-original-title="Remove">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body" style="display:none">
                        <form role="form">
                            <div class="box-body">
                                <div class="form-group col-md-2">
                                    <label for="exampleInputEmail1">Start Date</label>
                                    <input type="text" class="form-control" autocomplete="off" id="convStartdate" name="convStartdate" placeholder="Start date">
                                </div>
                                <div class="form-group col-md-2">
                                    <label for="exampleInputEmail1">End Date</label>
                                    <input type="text" class="form-control" autocomplete="off" id="convEnddate" name="convEnddate" placeholder="End date">
                                </div>
                                <div class="form-group col-md-2">
                                    <label for="exampleInputEmail1">Quarter</label>
                                    <select class="form-control" id="Quarter" name="Quarter">
                                        <option value="">--Select--</option>
                                        @for (DateTime date = DateTime.Now; date > new DateTime(2018, 1, 1); date = date.AddYears(-1))
                                        {
                                            <option value="Q1 - @date.Year">Q1 - @date.Year</option>
                                            <option value="Q2 - @date.Year">Q2 - @date.Year</option>
                                            <option value="Q3 - @date.Year">Q3 - @date.Year</option>
                                            <option value="Q4 - @date.Year">Q4 - @date.Year</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group col-md-2">
                                    <label for="exampleInputEmail1">All Company</label>
                                    <input type="checkbox" autocomplete="off" id="chkallcompany" name="chkallcompany" />
                                </div>
                                <div style="float: left;margin-top: 19px;">
                                    <div>
                                        <label for="inputPassword3" class="col-sm-10 control-label"></label>
                                        <div>
                                            <button type="button" class="btn btn-primary" onclick="SearchConversationReport()">Search</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div id="divresult"></div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</section>
<script>
    Date.prototype.GetFirstDayOfWeek = function () {
        return (new Date(this.setDate(this.getDate() - this.getDay() - 1 + (this.getDay() == 0 ? -6 : 1))));
    }
    Date.prototype.GetLastDayOfWeek = function () {
        return (new Date(this.setDate(this.getDate() - this.getDay() - 1 + 7)));
    }

    salessummary();

    function salessummary() {
        var value = $("#ddlsalessummary").val();
        if (value == 'today') {
            $("#ddlsalessummarytypes").html('');
            $("#ddlsalessummarytypes").hide();
            LoadSalesSummaryData(value);
        }
        if (value == 'month') {
            $("#ddlsalessummarytypes").show();
            var str = "";
            str += '<option value="">--Select--</option>';
            var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            for (var i = 0; i < 12; i += 1) {
                month = monthNames[i];
                str += '<option value="' + (i + 1) + '">' + month + '</option>';
            }
            $("#ddlsalessummarytypes").html(str);
            /*LoadSalesSummaryData(value);*/
        }
        if (value == 'week') {
            var d = new Date();
            var str = "";
            $("#ddlsalessummarytypes").show();
            str += '<option value="">--Select--</option>';

            var d = new Date();
            for (var i = 1; i < 53; i += 1) {
                var ddd = dateFromWeekNumber(d.getFullYear(), i);
                var dd = ddd.GetFirstDayOfWeek();
                var ee = ddd.GetLastDayOfWeek();
                startdate = dd.getDate() + "/" + (dd.getMonth() + 1) + "/" + dd.getFullYear();
                enddate = ee.getDate() + "/" + (ee.getMonth() + 1) + "/" + ee.getFullYear();

                getDateOfWeek(i, d.getFullYear());
                str += '<option value="' + i + '">' + i + '(' + startdate + ' - ' + enddate + ')</option>';
            }
            $("#ddlsalessummarytypes").html(str);
            //var str = "";
            //LoadSalesSummaryData(value);
        }
    }

    $("#ddlsalessummary").change(function () {
        salessummary();
    });

    $("#ddlsalessummarytypes").change(function () {
        var value = $("#ddlsalessummary").val();
        LoadSalesSummaryData(value);
    });

    function getDateOfWeek(w, y) {
        var d = (1 + (w - 1) * 7); // 1st of January + 7 days for each week
        return new Date(y, 0, d);
    }
    function LoadSalesSummaryData(type) {
        $("#ddlresultsalessummary").html('<div style="text-align: center"><img style="height: 150px;" src="https://fiverr-res.cloudinary.com/images/t_main1,q_auto,f_auto,q_auto,f_auto/attachments/delivery/asset/c49c83ef51b0c4230f8f39560b8250a3-1596267998/navy_for-light_bg/make-animated-logo-loader-for-your-website.gif"></div>');
        var d = new Date();
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var year = d.getFullYear();
        var startdate = '';
        var enddate = '';
        if (type == 'today') {
            startdate = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate();
            enddate = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate();
        }
        if (type == 'month') {
            var val = $("#ddlsalessummarytypes").val();
            var dd = new Date(d.getFullYear(), val - 1, 1);
            var ee = new Date(d.getFullYear(), val, 0);
            startdate = dd.getFullYear() + "-" + (dd.getMonth() + 1) + "-" + dd.getDate();
            enddate = ee.getFullYear() + "-" + (ee.getMonth() + 1) + "-" + ee.getDate();
        }
        if (type == 'week') {
            debugger;
            var val = $("#ddlsalessummarytypes").val();
            var ddd = dateFromWeekNumber(d.getFullYear(), val);
            var dd = ddd.GetFirstDayOfWeek();
            var ee = ddd.GetLastDayOfWeek();

            startdate = dd.getFullYear() + "-" + (dd.getMonth() + 1) + "-" + dd.getDate();
            enddate = ee.getFullYear() + "-" + (ee.getMonth() + 1) + "-" + ee.getDate();
        }

        $.ajax({
            url: '/Form/SalesSummaryData?Startdate=' + startdate + '&Enddate=' + enddate,
            data: {},
            async: true,
            type: 'GET',
            success: function (data) {
                $("#ddlresultsalessummary").html(data);
            }
        });
    }

    $("#Quarter").change(function () {
        var value = $(this).val();
        var currentDate = new Date();
        var currentYear = currentDate.getFullYear();
        if (value !== '') {
            var lst = value.split('-');
            currentYear = parseInt(lst[1]);
            value = lst[0].trim();
        }

        if (value === "Q1") {
            $("#convStartdate").datepicker().datepicker("setDate", new Date(currentYear, 0, 1));
            $("#convEnddate").datepicker().datepicker("setDate", new Date(currentYear, 2, 31));
        }
        if (value === "Q2") {
            $("#convStartdate").datepicker().datepicker("setDate", new Date(currentYear, 3, 1));
            $("#convEnddate").datepicker().datepicker("setDate", new Date(currentYear, 5, 30));
        }
        if (value === "Q3") {
            $("#convStartdate").datepicker().datepicker("setDate", new Date(currentYear, 6, 1));
            $("#convEnddate").datepicker().datepicker("setDate", new Date(currentYear, 8, 30));
        }
        if (value === "Q4") {
            $("#convStartdate").datepicker().datepicker("setDate", new Date(currentYear, 9, 1));
            $("#convEnddate").datepicker().datepicker("setDate", new Date(currentYear, 11, 31));
        }
    });
    $('#convStartdate').datepicker({
        format: 'dd/mm/yyyy',
        onSelect: function (dateText, inst) {
        }
    });
    $('#convEnddate').datepicker({
        format: 'dd/mm/yyyy',
        onSelect: function (dateText, inst) {
        }
    });


    var date1 = new Date();
    date1.setMonth(date1.getMonth() - 1);
    $("#convStartdate").datepicker().datepicker("setDate", date1);
    $("#convEnddate").datepicker().datepicker("setDate", new Date());

    function dateFromWeekNumber(year, week) {
        var d = new Date(year, 0, 1);
        var dayNum = d.getDay();
        var diff = --week * 7;

        // If 1 Jan is Friday to Sunday, go to next week
        if (!dayNum || dayNum > 4) {
            diff += 7;
        }

        // Add required number of days
        d.setDate(d.getDate() - d.getDay() + ++diff);
        return d;
    }


    SearchConversationReport();
    function SearchConversationReport() {
        var searchText = $("#tbldata_filter").find('.input-sm').val();


        $("#divresult").html('Loading...');
        $.ajax({
            url: '/Form/SearchConversationReport?Startdate=' + $("#convStartdate").val() + '&Enddate=' + $("#convEnddate").val() + '&isallcompany=' + $("#chkallcompany").is(":checked"),
            data: {},
            async: true,
            type: 'GET',
            success: function (data) {
                /*$('#tbldata').DataTable().clear().destroy();*/
                var loop = 1;
                var str = '<table id="tbldata" class="table table-responsive"><thead><tr><th>#</th> <th>Company</th><th>Quoted Products</th><th>PO Received </th><th>% Conversion</th><th>Action</th></tr></thead>';
                $(data).each(function (i, v) {
                    str += '<tr><td>' + loop + '</td><td>' + v.CompanyName + '</td><td>' + v.QuotedProduct + '</td><td>' + v.POProduct + '</td><td>' + v.Conversion.toFixed(1) + '%</td><td><a href="javascript:void(0)" onclick="DetailsOfConversion(' + v.CompanyId + ')">Details</a></td></tr>';
                    loop += 1;
                });

                str += "</table>";
                $("#divresult").html(str);

                //$("#tbldata").DataTable({
                //    "ordering": false
                //});
                var oTable = $("#tbldata").DataTable();

                if (searchText !== undefined && searchText !== '') {
                    oTable.search(searchText).draw();
                    //        $("#tbldata_filter").find('.input-sm').val(searchText);
                }
            }
        });
    }

    function DetailsOfConversion(companyId) {
        var loop = 1;
        var str = '<table id="tblDetailsOfConversion" class="table table-responsive dataTable no-footer"><thead><tr><th>#</th><th>Quote #</th><th>PO No</th><th>Product Name</th><th>CAS No</th><th>CAT No</th><th>Price</th><th>Lead Time</th></thead>';
        $.ajax({
            url: '/Form/GetQuoteDataForConversionReport?Startdate=' + $("#convStartdate").val() + '&Enddate=' + $("#convEnddate").val() + '&companyId=' + companyId,
            data: {},
            type: 'GET',
            success: function (data) {

                $(data).each(function (i, v) {
                    var clsname = '';
                    if (v.PO !== '') {
                        clsname = 'clsbluebg';
                    }
                    str += '<tr class="' + clsname + '"><td>' + loop + '</td><td>' + v.quoteRef + '</td><td>' + v.PO + '</td><td>' + v.productname + '</td><td>' + v.casno + '</td><td>' + v.catno + '</td><td>' + v.price + '</td><td>' + v.leadtime + '</td></tr>';
                    loop += 1;
                });

                str += "</table>";
                $('#myModal').find('.modal-body').html(str);
                $('#myModal').modal({ show: true });
                $('#myModal').find(".modal-dialog").css("width", "95%   ");

                $("#tblDetailsOfConversion").DataTable();

            }
        });

    }

    function saveRegrettedTotal(days) {
        var totalemail = $("#regretted_" + days).val();
        $.ajax({
            url: '/Form/saveRegrettedTotal?totalRegretted=' + totalemail + '&days=' + days,
            data: {},
            type: 'GET',
            success: function (data) {
                toastr.success("You changes was updated.");
                window.location.reload(true);
            }
        });
    }


    function saveEmailTotal(days) {
        var totalemail = $("#totalemail_" + days).val();
        $.ajax({
            url: '/Form/saveEmailTotal?totalemail=' + totalemail + '&days=' + days,
            data: {},
            type: 'GET',
            success: function (data) {
                toastr.success("You changes was updated.");
                window.location.reload(true);
            }
        });
    }
    function editsummary(userId, days) {
        var clarification = $("#clarification_" + days + "_" + userId).val();
        var upload = $("#upload_" + days + "_" + userId).val();
        var complex = $("#complex_" + days + "_" + userId).val();
        //var regretted = $("#regretted_" + days + "_" + userId).val();
        $.ajax({
            url: '/Form/Editsummary?userid=' + userId + '&days=' + days + '&clarification=' + clarification
                + '&upload=' + upload
                + '&complex=' + complex,
            data: {},
            type: 'GET',
            success: function (data) {
                toastr.success("You changes was updated.");
                window.location.reload(true);
            }
        });
    }

    function filtercomap() {
        $('.col-md-12').each(function () { $(this).hide(); });
        var txt = $("#compList option:selected").text();
        if (txt !== '' && txt !== '--Select--') {
            $('.col-md-12').each(function () {
                if ($(this).text().toUpperCase().indexOf(txt.toUpperCase()) != -1) {
                    $(this).show();
                }
            });
        } else {
            $('.col-md-12').each(function () { $(this).show(); });
        }
    }

    $(document).on("keyup", '#filtertext', function () {
        textboxFilter($(this).val());
        //$('.col-md-12').each(function () { $(this).hide(); });
        //var txt = $(this).val();
        //if (txt !== '') {
        //    $('.col-md-12').each(function () {
        //        if ($(this).text().toUpperCase().indexOf(txt.toUpperCase()) != -1) {
        //            $(this).show();
        //        }
        //    });
        //} else {
        //    $('.col-md-12').each(function () { $(this).show(); });
        //}
    });


    function textboxFilter(txt) {
        $('.col-md-12').each(function () { $(this).hide(); });
        if (txt !== '') {
            $('.col-md-12').each(function () {
                if ($(this).text().toUpperCase().indexOf(txt.toUpperCase()) != -1) {
                    $(this).show();
                }
            });
        } else {
            $('.col-md-12').each(function () { $(this).show(); });
        }
    }

    function addInRegret() {
        var ids = [];
        $('.clscheckboxremind').each(function () {
            if ($(this).is(':checked')) {
                ids.push($(this).val());
            }
        });

        if (ids.length === 0) {
            toastr.error("Please select atleast one Product from custom synthesis");
            return false;
        }

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this product!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, Regret it!",
            cancelButtonText: "No, cancel!",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: "POST",
                        url: "/Form/RegretProductFromDashboard",
                        data: { id: ids },
                        traditional: true, // add this
                        dataType: 'json',
                        success: function (data) {
                            if (data.success) {
                                window.location.reload(true);
                            }
                        }
                    });

                } else {
                    toastr.error("Your added product is safe :)");
                }
            });
    }

    function addInStudy() {
        var ids = [];
        $('.clsCustomSynthesis').find('.clscheckboxremind').each(function () {
            if ($(this).is(':checked')) {
                ids.push($(this).val());
            }
        });

        if (ids.length === 0) {
            toastr.error("Please select atleast one Product from custom synthesis");
            return false;
        }

        $.ajax({
            url: '/Form/AddStudyFromDashboard',
            data: { id: ids },
            type: 'POST',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                if (data.success) {
                    window.location.reload(true);
                }
            }
        });
    }

    function saveallremind() {
        var ids = [];
        $('.clscheckboxremind').each(function () {
            if ($(this).is(':checked')) {
                ids.push($(this).val());
            }
        });

        if (ids.length === 0) {
            toastr.error("Please select atleast one Product");
            return false;
        }

        $.ajax({
            url: '/Form/SetQuoteReminder',
            data: { id: ids },
            type: 'POST',
            traditional: true, // add this
            dataType: 'json',
            success: function (data) {
                if (data.success) {
                    window.location.reload(true);
                }
            }
        });
    }


    var SpeechRecogntion = window.webkitSpeechRecognition;
    var recognition = new window.SpeechRecogntion();
    recognition.continuous = true;
    recognition.interimResults = false;
    var textbox = $('#filtertext');
    var instration = $('#instration');
    var content = '';
    recognition.continuous = true
    recognition.onstart = function () {
        instration.text('Voice Recognition is on');

        setTimeout(function () {
            $('#start-btn').css('display', 'block');
            $('#create').css('display', 'none');
            recognition.stop()
            content = '';
        }, 4000);
    }
    recognition.onspeechend = function () {
        instration.text('No Activity');
    }
    recognition.onerror = function (event) {
        instration.text('Try Again');
        console.log(event);
    }
    recognition.onresult = function (event) {
        var current = event.resultIndex;
        var transcript = event.results[current][0].transcript;
        var confidence = event.results[current][0].confidence;
        console.log(transcript);
        content += transcript;

        $('#filtertext').val('');
        $('#filtertext').val(content);
        textboxFilter($('#filtertext').val());
    };

    $('#start-btn').click(function (event) {
        if (content.length) {
            content += ''
        }
        //$('#filtertext').val('Speak...');
        $('#downloadlink').css('display', 'none');
        $('#create').css('display', 'block');
        $(this).css('display', 'none');
        recognition.start()
    });

    var textFile = null,
        makeTextFile = function (text) {
            var data = new Blob([text], { type: 'text/plain' });
            // If we are replacing a previously generated file we need to
            // manually revoke the object URL to avoid memory leaks.
            if (textFile !== null) {
                window.URL.revokeObjectURL(textFile);
            }
            textFile = window.URL.createObjectURL(data);
            return textFile;
        };
    var create = document.getElementById('create'),
        textbox = document.getElementById('filtertext');

    create.addEventListener('click', function () {

        //var link = document.getElementById('downloadlink');
        //link.href = makeTextFile(textbox.value);
        //link.style.display = 'block';
        $('#start-btn').css('display', 'block');
        $('#create').css('display', 'none');
        recognition.stop()
        content = '';
        $('#instration').text('Press Start Voice Recognition');
    }, false);

    function geographycalflter() {
        $(".clsdateflt").each(function () {
            $(this).css('display', 'block');
        })
        var selected = $("#ddlGeographicalLocation").val();
        if (selected === "") {

        }
        else {
            $(".clsdateflt").each(function () {

                var val = $(this).attr('geographycal');
                if (val !== selected) {
                    $(this).css('display', 'none');
                }
                else {

                }
            });
        }
    }

    function dateflter(divisionName = '') {

        if (divisionName === '') {
            var today = new Date();
            var days = $("#ddldatefilter").val();

            $("#divcustomsynthesis").find("#ddldatefilter").val(days);
            $("#divpreapprovedrevision").find("#ddldatefilter").val(days);
            $("#divreviewed").find("#ddldatefilter").val(days);
            $("#divinstock").find("#ddldatefilter").val(days);
            $("#divapproved").find("#ddldatefilter").val(days);
            $("#divrfq").find("#ddldatefilter").val(days);
            $("#divstudy").find("#ddldatefilter").val(days);

            $(".clsdateflt").each(function () {
                $(this).css('display', 'block');
            })
            if (days === "0") {
            }
            else {
                var day = parseInt(days);
                var lessdate = lessDays(today, day);

                $(".clsdateflt").each(function () {
                    var datestring = $(this).attr('createddate');
                    var from = datestring.split(" ")[0].split("/");
                    var date = new Date(from[2], from[1] - 1, from[0]);
                    var newdate = new Date(date.getFullYear(), date.getMonth(), date.getDate());
                    if (lessdate > newdate) {
                        $(this).css('display', 'none');
                    }
                });
            }
        }
        else {
            var today = new Date();
            var days = $("#" + divisionName).find("#ddldatefilter").val();
            $("#" + divisionName).find(".clsdateflt").each(function () {
                $(this).css('display', 'block');
            })
            if (days === "0") {

            }
            else {
                var day = parseInt(days);
                var lessdate = lessDays(today, day);

                $("#" + divisionName).find(".clsdateflt").each(function () {
                    var datestring = $(this).attr('createddate');
                    var from = datestring.split(" ")[0].split("/");
                    var date = new Date(from[2], from[1] - 1, from[0]);
                    var newdate = new Date(date.getFullYear(), date.getMonth(), date.getDate());
                    if (lessdate > newdate) {
                        $(this).css('display', 'none');
                    }
                });
            }
        }
    }

    dateflter();
    dateflter('divpreapprovedrevision')
    dateflter('divreviewed')
    dateflter('divinstock')
    $("#divcustomsynthesis").find('#ddldatefilter').val('3');
    dateflter('divcustomsynthesis')

    $("#selectallinstockdomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckinstockdomestic").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckinstockdomestic").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallinstockexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckinstockexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckinstockexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });

    $("#selectallrevieweddomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckreviewdomestic").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckreviewdomestic").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallreviewedexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckreviewexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckreviewexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });

    $("#selectallcustsyndomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckcustsyndomestic").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckcustsyndomestic").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallcustsynexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckcustsynexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckcustsynexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });

    $("#selectallrfqdomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckrfqdomestic").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckrfqdomestic").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallrfqexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckrfqexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckrfqexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });


    $("#selectallpreapprdomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckpreapprexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckpreapprexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallpreapprexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckpreappexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckpreappexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });


    $("#selectallappdomestic").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckappexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckappexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });
    $("#selectallappexport").click(function () {
        if ($(this).is(":checked")) {
            $(".clscheckappexport").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $(".clscheckappexport").each(function () {
                $(this).prop('checked', false);
            });
        }
    });

    function openall() {
        $('.clscheckboxremind').each(function () {
            if ($(this).is(":checked")) {
                var value = $(this).val();
                window.open("http://spms.synzeal.com/Form/Quote/" + value, "_blank");
            }
        });
    }
</script>
<style>
    .clsblue {
        color: blue
    }

    .clsorange {
        color: #ef9d05;
    }

    .clslightgreen {
        color: #b9c83e;
        text-decoration: underline;
        font-weight: bold;
    }
    /*.clslightred{
        color:red;
    }*/

    a {
        color: black;
        font-weight: 700;
    }

    .clsbluebg {
        background: #795cc0;
        color: #fff;
    }
</style>